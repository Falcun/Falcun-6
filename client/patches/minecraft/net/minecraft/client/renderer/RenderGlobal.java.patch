--- ../src-base/minecraft/net/minecraft/client/renderer/RenderGlobal.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/RenderGlobal.java
@@ -1,19 +1,102 @@
 package net.minecraft.client.renderer;
 
 import com.google.common.collect.Lists;
+
+import net.minecraft.block.Block;
+import net.minecraft.block.BlockChest;
+import net.minecraft.block.BlockDoublePlant;
+import net.minecraft.block.BlockEnderChest;
+import net.minecraft.block.BlockFlower;
+import net.minecraft.block.BlockSign;
+import net.minecraft.block.BlockSkull;
+import net.minecraft.block.BlockTallGrass;
+import net.minecraft.block.material.Material;
+import net.minecraft.block.state.IBlockState;
+import net.minecraft.client.Minecraft;
+import net.minecraft.client.audio.ISound;
+import net.minecraft.client.audio.PositionedSoundRecord;
+import net.minecraft.client.multiplayer.WorldClient;
+import net.minecraft.client.particle.EntityFX;
+import net.minecraft.client.renderer.chunk.ChunkRenderDispatcher;
+import net.minecraft.client.renderer.chunk.CompiledChunk;
+import net.minecraft.client.renderer.chunk.IRenderChunkFactory;
+import net.minecraft.client.renderer.chunk.ListChunkFactory;
+import net.minecraft.client.renderer.chunk.RenderChunk;
+import net.minecraft.client.renderer.chunk.VboChunkFactory;
+import net.minecraft.client.renderer.chunk.VisGraph;
+import net.minecraft.client.renderer.culling.ClippingHelper;
+import net.minecraft.client.renderer.culling.ClippingHelperImpl;
+import net.minecraft.client.renderer.culling.Frustum;
+import net.minecraft.client.renderer.culling.ICamera;
+import net.minecraft.client.renderer.entity.RenderManager;
+import net.minecraft.client.renderer.texture.TextureAtlasSprite;
+import net.minecraft.client.renderer.texture.TextureManager;
+import net.minecraft.client.renderer.texture.TextureMap;
+import net.minecraft.client.renderer.tileentity.RenderItemFrame;
+import net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher;
+import net.minecraft.client.renderer.tileentity.TileEntitySignRenderer;
+import net.minecraft.client.renderer.vertex.DefaultVertexFormats;
+import net.minecraft.client.renderer.vertex.VertexBuffer;
+import net.minecraft.client.renderer.vertex.VertexFormat;
+import net.minecraft.client.renderer.vertex.VertexFormatElement;
+import net.minecraft.client.resources.IResourceManager;
+import net.minecraft.client.shader.Framebuffer;
+import net.minecraft.client.shader.ShaderGroup;
+import net.minecraft.client.shader.ShaderLinkHelper;
+import net.minecraft.crash.CrashReport;
+import net.minecraft.crash.CrashReportCategory;
+import net.minecraft.entity.Entity;
+import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.item.EntityEnderPearl;
+import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.projectile.EntityWitherSkull;
+import net.minecraft.init.Blocks;
+import net.minecraft.init.Items;
+import net.minecraft.item.Item;
+import net.minecraft.item.ItemDye;
+import net.minecraft.item.ItemRecord;
+import net.minecraft.tileentity.TileEntity;
+import net.minecraft.tileentity.TileEntityChest;
+import net.minecraft.util.AxisAlignedBB;
+import net.minecraft.util.BlockPos;
+import net.minecraft.util.ClassInheritanceMultiMap;
+import net.minecraft.util.EnumFacing;
+import net.minecraft.util.EnumParticleTypes;
+import net.minecraft.util.EnumWorldBlockLayer;
+import net.minecraft.util.LongHashMap;
+import net.minecraft.util.MathHelper;
+import net.minecraft.util.Matrix4f;
+import net.minecraft.util.MovingObjectPosition;
+import net.minecraft.util.ReportedException;
+import net.minecraft.util.ResourceLocation;
+import net.minecraft.util.Vec3;
+import net.minecraft.util.Vector3d;
+import net.minecraft.world.WorldProvider;
+import net.minecraft.world.border.WorldBorder;
+import net.minecraft.world.chunk.Chunk;
+import net.minecraft.world.chunk.IChunkProvider;
+
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import com.google.gson.JsonSyntaxException;
 import java.io.IOException;
+import java.util.ArrayDeque;
+import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collection;
-import java.util.EnumSet;
+import java.util.Collections;
+import java.util.Deque;
+import java.util.HashSet;
 import java.util.Iterator;
+import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Map;
-import java.util.Queue;
 import java.util.Random;
 import java.util.Set;
 import java.util.concurrent.Callable;
+
+import net.mattbenson.Wrapper;
+import net.mattbenson.gui.menu.pages.FPSPage;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockChest;
 import net.minecraft.block.BlockEnderChest;
@@ -41,7 +124,9 @@
 import net.minecraft.client.renderer.texture.TextureAtlasSprite;
 import net.minecraft.client.renderer.texture.TextureManager;
 import net.minecraft.client.renderer.texture.TextureMap;
+import net.minecraft.client.renderer.tileentity.RenderItemFrame;
 import net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher;
+import net.minecraft.client.renderer.tileentity.TileEntitySignRenderer;
 import net.minecraft.client.renderer.vertex.DefaultVertexFormats;
 import net.minecraft.client.renderer.vertex.VertexBuffer;
 import net.minecraft.client.renderer.vertex.VertexFormat;
@@ -55,6 +140,7 @@
 import net.minecraft.crash.CrashReportCategory;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
+import net.minecraft.entity.item.EntityEnderPearl;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.entity.projectile.EntityWitherSkull;
 import net.minecraft.init.Blocks;
@@ -62,6 +148,7 @@
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemDye;
 import net.minecraft.item.ItemRecord;
+import net.minecraft.src.Config;
 import net.minecraft.tileentity.TileEntity;
 import net.minecraft.tileentity.TileEntityChest;
 import net.minecraft.util.AxisAlignedBB;
@@ -70,6 +157,7 @@
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.EnumParticleTypes;
 import net.minecraft.util.EnumWorldBlockLayer;
+import net.minecraft.util.LongHashMap;
 import net.minecraft.util.MathHelper;
 import net.minecraft.util.Matrix4f;
 import net.minecraft.util.MovingObjectPosition;
@@ -78,17 +166,33 @@
 import net.minecraft.util.Vec3;
 import net.minecraft.util.Vector3d;
 import net.minecraft.world.IWorldAccess;
+import net.minecraft.world.WorldProvider;
 import net.minecraft.world.border.WorldBorder;
 import net.minecraft.world.chunk.Chunk;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
+import net.minecraft.world.chunk.IChunkProvider;
+import net.optifine.CustomColors;
+import net.optifine.CustomSky;
+import net.optifine.DynamicLights;
+import net.optifine.Lagometer;
+import net.optifine.RandomEntities;
+import net.optifine.SmartAnimations;
+import net.optifine.model.BlockModelUtils;
+import net.optifine.reflect.Reflector;
+import net.optifine.render.ChunkVisibility;
+import net.optifine.render.CloudRenderer;
+import net.optifine.render.RenderEnv;
+import net.optifine.shaders.Shaders;
+import net.optifine.shaders.ShadersRender;
+import net.optifine.shaders.ShadowUtils;
+import net.optifine.util.ChunkUtils;
+import net.optifine.util.RenderChunkUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.lwjgl.input.Keyboard;
 import org.lwjgl.opengl.GL11;
 import org.lwjgl.util.vector.Vector3f;
 import org.lwjgl.util.vector.Vector4f;
 
-@SideOnly(Side.CLIENT)
 public class RenderGlobal implements IWorldAccess, IResourceManagerReloadListener
 {
     private static final Logger field_147599_m = LogManager.getLogger();
@@ -97,7 +201,11 @@
     private static final ResourceLocation field_110925_j = new ResourceLocation("textures/environment/clouds.png");
     private static final ResourceLocation field_110926_k = new ResourceLocation("textures/environment/end_sky.png");
     private static final ResourceLocation field_175006_g = new ResourceLocation("textures/misc/forcefield.png");
-    private final Minecraft field_72777_q;
+
+    /** A reference to the Minecraft object. */
+    public final Minecraft field_72777_q;
+
+    /** The RenderEngine instance used by RenderGlobal */
     private final TextureManager field_72770_i;
     private final RenderManager field_175010_j;
     private WorldClient field_72769_h;
@@ -105,18 +213,30 @@
     private List<RenderGlobal.ContainerLocalRenderInformation> field_72755_R = Lists.<RenderGlobal.ContainerLocalRenderInformation>newArrayListWithCapacity(69696);
     private final Set<TileEntity> field_181024_n = Sets.<TileEntity>newHashSet();
     private ViewFrustum field_175008_n;
+
+    /** The star GL Call list */
     private int field_72772_v = -1;
+
+    /** OpenGL sky list */
     private int field_72771_w = -1;
+
+    /** OpenGL sky list 2 */
     private int field_72781_x = -1;
     private VertexFormat field_175014_r;
     private VertexBuffer field_175013_s;
     private VertexBuffer field_175012_t;
     private VertexBuffer field_175011_u;
+
+    /**
+     * counts the cloud render updates. Used with mod to stagger some updates
+     */
     private int field_72773_u;
-    private final Map<Integer, DestroyBlockProgress> field_72738_E = Maps.<Integer, DestroyBlockProgress>newHashMap();
+    public final Map<Integer, DestroyBlockProgress> field_72738_E = Maps.<Integer, DestroyBlockProgress>newHashMap();
     private final Map<BlockPos, ISound> field_147593_P = Maps.<BlockPos, ISound>newHashMap();
     private final TextureAtlasSprite[] field_94141_F = new TextureAtlasSprite[10];
     private Framebuffer field_175015_z;
+
+    /** Stores the shader group for the entity_outline shader */
     private ShaderGroup field_174991_A;
     private double field_174992_B = Double.MIN_VALUE;
     private double field_174993_C = Double.MIN_VALUE;
@@ -132,9 +252,17 @@
     private final ChunkRenderDispatcher field_174995_M = new ChunkRenderDispatcher();
     private ChunkRenderContainer field_174996_N;
     private int field_72739_F = -1;
+
+    /** Render entities startup counter (init value=2) */
     private int field_72740_G = 2;
-    private int field_72748_H;
-    private int field_72749_I;
+
+    /** Count entities total */
+    public int field_72748_H;
+
+    /** Count entities rendered */
+    public int field_72749_I;
+
+    /** Count entities hidden */
     private int field_72750_J;
     private boolean field_175002_T = false;
     private ClippingHelper field_175001_U;
@@ -145,10 +273,36 @@
     private double field_147596_f;
     private double field_147597_g;
     private double field_147602_h;
-    private boolean field_147595_R = true;
+    public boolean field_147595_R = true;
+    private CloudRenderer cloudRenderer;
+    public Entity renderedEntity;
+    public Set chunksToResortTransparency = new LinkedHashSet();
+    public Set chunksToUpdateForced = new LinkedHashSet();
+    private Deque visibilityDeque = new ArrayDeque();
+    private List renderInfosEntities = new ArrayList(1024);
+    private List renderInfosTileEntities = new ArrayList(1024);
+    private List renderInfosNormal = new ArrayList(1024);
+    private List renderInfosEntitiesNormal = new ArrayList(1024);
+    private List renderInfosTileEntitiesNormal = new ArrayList(1024);
+    private List renderInfosShadow = new ArrayList(1024);
+    private List renderInfosEntitiesShadow = new ArrayList(1024);
+    private List renderInfosTileEntitiesShadow = new ArrayList(1024);
+    private int renderDistance = 0;
+    private int renderDistanceSq = 0;
+    private static final Set SET_ALL_FACINGS = Collections.unmodifiableSet(new HashSet(Arrays.asList(EnumFacing.field_82609_l)));
+    private int countTileEntitiesRendered;
+    private IChunkProvider worldChunkProvider = null;
+    private LongHashMap worldChunkProviderMap = null;
+    private int countLoadedChunksPrev = 0;
+    private RenderEnv renderEnv = new RenderEnv(Blocks.field_150350_a.func_176223_P(), new BlockPos(0, 0, 0));
+    public boolean renderOverlayDamaged = false;
+    public boolean renderOverlayEyes = false;
+    private boolean firstWorldLoad = false;
+    private static int renderEntitiesCounter = 0;
 
     public RenderGlobal(Minecraft p_i1249_1_)
     {
+        this.cloudRenderer = new CloudRenderer(p_i1249_1_);
         this.field_72777_q = p_i1249_1_;
         this.field_175010_j = p_i1249_1_.func_175598_ae();
         this.field_72770_i = p_i1249_1_.func_110434_K();
@@ -192,6 +346,9 @@
         }
     }
 
+    /**
+     * Creates the entity outline shader to be stored in RenderGlobal.entityOutlineShader
+     */
     public void func_174966_b()
     {
         if (OpenGlHelper.field_148824_g)
@@ -242,7 +399,7 @@
 
     protected boolean func_174985_d()
     {
-        return this.field_175015_z != null && this.field_174991_A != null && this.field_72777_q.field_71439_g != null && this.field_72777_q.field_71439_g.func_175149_v() && this.field_72777_q.field_71474_y.field_178883_an.func_151470_d();
+        return !Config.isFastRender() && !Config.isShaders() && !Config.isAntialiasing() ? this.field_175015_z != null && this.field_174991_A != null && this.field_72777_q.field_71439_g != null && this.field_72777_q.field_71439_g.func_175149_v() && this.field_72777_q.field_71474_y.field_178883_an.func_151470_d() : false;
     }
 
     private void func_174964_o()
@@ -318,24 +475,25 @@
         int i = 64;
         int j = 6;
         p_174968_1_.func_181668_a(7, DefaultVertexFormats.field_181705_e);
+        int k = (this.renderDistance / 64 + 1) * 64 + 64;
 
-        for (int k = -384; k <= 384; k += 64)
+        for (int l = -k; l <= k; l += 64)
         {
-            for (int l = -384; l <= 384; l += 64)
+            for (int i1 = -k; i1 <= k; i1 += 64)
             {
-                float f = (float)k;
-                float f1 = (float)(k + 64);
+                float f = (float)l;
+                float f1 = (float)(l + 64);
 
                 if (p_174968_3_)
                 {
-                    f1 = (float)k;
-                    f = (float)(k + 64);
+                    f1 = (float)l;
+                    f = (float)(l + 64);
                 }
 
-                p_174968_1_.func_181662_b((double)f, (double)p_174968_2_, (double)l).func_181675_d();
-                p_174968_1_.func_181662_b((double)f1, (double)p_174968_2_, (double)l).func_181675_d();
-                p_174968_1_.func_181662_b((double)f1, (double)p_174968_2_, (double)(l + 64)).func_181675_d();
-                p_174968_1_.func_181662_b((double)f, (double)p_174968_2_, (double)(l + 64)).func_181675_d();
+                p_174968_1_.func_181662_b((double)f, (double)p_174968_2_, (double)i1).func_181675_d();
+                p_174968_1_.func_181662_b((double)f1, (double)p_174968_2_, (double)i1).func_181675_d();
+                p_174968_1_.func_181662_b((double)f1, (double)p_174968_2_, (double)(i1 + 64)).func_181675_d();
+                p_174968_1_.func_181662_b((double)f, (double)p_174968_2_, (double)(i1 + 64)).func_181675_d();
             }
         }
     }
@@ -426,6 +584,9 @@
         }
     }
 
+    /**
+     * set null to clear
+     */
     public void func_72732_a(WorldClient p_72732_1_)
     {
         if (this.field_72769_h != null)
@@ -442,21 +603,57 @@
         this.field_175010_j.func_78717_a(p_72732_1_);
         this.field_72769_h = p_72732_1_;
 
+        if (Config.isDynamicLights())
+        {
+            DynamicLights.clear();
+        }
+
+        ChunkVisibility.reset();
+        this.worldChunkProvider = null;
+        this.worldChunkProviderMap = null;
+        this.renderEnv.reset((IBlockState)null, (BlockPos)null);
+        Shaders.checkWorldChanged(this.field_72769_h);
+
         if (p_72732_1_ != null)
         {
             p_72732_1_.func_72954_a(this);
             this.func_72712_a();
         }
+        else
+        {
+            this.field_175009_l.clear();
+            this.clearRenderInfos();
+
+            if (this.field_175008_n != null)
+            {
+                this.field_175008_n.func_178160_a();
+            }
+
+            this.field_175008_n = null;
+        }
     }
 
+    /**
+     * Loads all the renderers and sets up the basic settings usage
+     */
     public void func_72712_a()
     {
         if (this.field_72769_h != null)
         {
             this.field_147595_R = true;
-            Blocks.field_150362_t.func_150122_b(this.field_72777_q.field_71474_y.field_74347_j);
-            Blocks.field_150361_u.func_150122_b(this.field_72777_q.field_71474_y.field_74347_j);
+            Blocks.field_150362_t.func_150122_b(Config.isTreesFancy());
+            Blocks.field_150361_u.func_150122_b(Config.isTreesFancy());
+            //BlockModelRenderer.updateAoLightValue();
+
+            if (Config.isDynamicLights())
+            {
+                DynamicLights.clear();
+            }
+
+            SmartAnimations.update();
             this.field_72739_F = this.field_72777_q.field_71474_y.field_151451_c;
+            this.renderDistance = this.field_72739_F * 16;
+            this.renderDistanceSq = this.renderDistance * this.renderDistance;
             boolean flag = this.field_175005_X;
             this.field_175005_X = OpenGlHelper.func_176075_f();
 
@@ -471,12 +668,9 @@
                 this.field_175007_a = new VboChunkFactory();
             }
 
-            if (flag != this.field_175005_X)
-            {
-                this.func_174963_q();
-                this.func_174980_p();
-                this.func_174964_o();
-            }
+            this.func_174963_q();
+            this.func_174980_p();
+            this.func_174964_o();
 
             if (this.field_175008_n != null)
             {
@@ -504,6 +698,11 @@
 
             this.field_72740_G = 2;
         }
+
+        if (this.field_72777_q.field_71439_g == null)
+        {
+            this.firstWorldLoad = true;
+        }
     }
 
     protected void func_174986_e()
@@ -514,19 +713,28 @@
 
     public void func_72720_a(int p_72720_1_, int p_72720_2_)
     {
-        if (OpenGlHelper.field_148824_g)
+        if (OpenGlHelper.field_148824_g && this.field_174991_A != null)
         {
-            if (this.field_174991_A != null)
-            {
-                this.field_174991_A.func_148026_a(p_72720_1_, p_72720_2_);
-            }
+            this.field_174991_A.func_148026_a(p_72720_1_, p_72720_2_);
         }
     }
 
     public void func_180446_a(Entity p_180446_1_, ICamera p_180446_2_, float p_180446_3_)
     {
+        int i = 0;
+
+        if (Reflector.MinecraftForgeClient_getRenderPass.exists())
+        {
+            i = Reflector.callInt(Reflector.MinecraftForgeClient_getRenderPass, new Object[0]);
+        }
+
         if (this.field_72740_G > 0)
         {
+            if (i > 0)
+            {
+                return;
+            }
+
             --this.field_72740_G;
         }
         else
@@ -537,9 +745,16 @@
             this.field_72769_h.field_72984_F.func_76320_a("prepare");
             TileEntityRendererDispatcher.field_147556_a.func_178470_a(this.field_72769_h, this.field_72777_q.func_110434_K(), this.field_72777_q.field_71466_p, this.field_72777_q.func_175606_aa(), p_180446_3_);
             this.field_175010_j.func_180597_a(this.field_72769_h, this.field_72777_q.field_71466_p, this.field_72777_q.func_175606_aa(), this.field_72777_q.field_147125_j, this.field_72777_q.field_71474_y, p_180446_3_);
-            this.field_72748_H = 0;
-            this.field_72749_I = 0;
-            this.field_72750_J = 0;
+            ++renderEntitiesCounter;
+
+            if (i == 0)
+            {
+                this.field_72748_H = 0;
+                this.field_72749_I = 0;
+                this.field_72750_J = 0;
+                this.countTileEntitiesRendered = 0;
+            }
+
             Entity entity = this.field_72777_q.func_175606_aa();
             double d3 = entity.field_70142_S + (entity.field_70165_t - entity.field_70142_S) * (double)p_180446_3_;
             double d4 = entity.field_70137_T + (entity.field_70163_u - entity.field_70137_T) * (double)p_180446_3_;
@@ -551,16 +766,32 @@
             this.field_72777_q.field_71460_t.func_180436_i();
             this.field_72769_h.field_72984_F.func_76318_c("global");
             List<Entity> list = this.field_72769_h.func_72910_y();
-            this.field_72748_H = list.size();
 
-            for (int i = 0; i < this.field_72769_h.field_73007_j.size(); ++i)
+            if (i == 0)
             {
-                Entity entity1 = (Entity)this.field_72769_h.field_73007_j.get(i);
-                ++this.field_72749_I;
+                this.field_72748_H = list.size();
+            }
 
-                if (entity1.func_145770_h(d0, d1, d2))
+            if (Config.isFogOff() || Wrapper.getInstance().isFog() && this.field_72777_q.field_71460_t.fogStandard)
+            {
+                GlStateManager.func_179106_n();
+            }
+
+            boolean flag = Reflector.ForgeEntity_shouldRenderInPass.exists();
+            boolean flag1 = Reflector.ForgeTileEntity_shouldRenderInPass.exists();
+
+            for (int j = 0; j < this.field_72769_h.field_73007_j.size(); ++j)
+            {
+                Entity entity1 = (Entity)this.field_72769_h.field_73007_j.get(j);
+
+                if (!flag || Reflector.callBoolean(entity1, Reflector.ForgeEntity_shouldRenderInPass, new Object[] {Integer.valueOf(i)}))
                 {
-                    this.field_175010_j.func_147937_a(entity1, p_180446_3_);
+                    ++this.field_72749_I;
+
+                    if (entity1.func_145770_h(d0, d1, d2))
+                    {
+                        this.field_175010_j.func_147937_a(entity1, p_180446_3_);
+                    }
                 }
             }
 
@@ -574,13 +805,18 @@
                 RenderHelper.func_74518_a();
                 this.field_175010_j.func_178632_c(true);
 
-                for (int j = 0; j < list.size(); ++j)
+                for (int k = 0; k < list.size(); ++k)
                 {
-                    Entity entity3 = (Entity)list.get(j);
-                    boolean flag = this.field_72777_q.func_175606_aa() instanceof EntityLivingBase && ((EntityLivingBase)this.field_72777_q.func_175606_aa()).func_70608_bn();
-                    boolean flag1 = entity3.func_145770_h(d0, d1, d2) && (entity3.field_70158_ak || p_180446_2_.func_78546_a(entity3.func_174813_aQ()) || entity3.field_70153_n == this.field_72777_q.field_71439_g) && entity3 instanceof EntityPlayer;
+                    Entity entity3 = (Entity)list.get(k);
+                    
+                    if(FPSPage.ENTITIES.contains(entity3.getClass())) {
+                    	continue;
+                    }
+                    
+                    boolean flag2 = this.field_72777_q.func_175606_aa() instanceof EntityLivingBase && ((EntityLivingBase)this.field_72777_q.func_175606_aa()).func_70608_bn();
+                    boolean flag3 = entity3.func_145770_h(d0, d1, d2) && (entity3.field_70158_ak || p_180446_2_.func_78546_a(entity3.func_174813_aQ()) || entity3.field_70153_n == this.field_72777_q.field_71439_g) && entity3 instanceof EntityPlayer;
 
-                    if ((entity3 != this.field_72777_q.func_175606_aa() || this.field_72777_q.field_71474_y.field_74320_O != 0 || flag) && flag1)
+                    if ((entity3 != this.field_72777_q.func_175606_aa() || this.field_72777_q.field_71474_y.field_74320_O != 0 || flag2) && flag3)
                     {
                         this.field_175010_j.func_147937_a(entity3, p_180446_3_);
                     }
@@ -602,11 +838,22 @@
             }
 
             this.field_72769_h.field_72984_F.func_76318_c("entities");
-            label738:
+            boolean flag6 = Config.isShaders();
 
-            for (RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation : this.field_72755_R)
+            if (flag6)
             {
-                Chunk chunk = this.field_72769_h.func_175726_f(renderglobal$containerlocalrenderinformation.field_178036_a.func_178568_j());
+                Shaders.beginEntities();
+            }
+
+            RenderItemFrame.updateItemRenderDistance();
+            boolean flag7 = this.field_72777_q.field_71474_y.field_74347_j;
+            this.field_72777_q.field_71474_y.field_74347_j = Config.isDroppedItemsFancy();
+            label900:
+
+            for (Object e : this.renderInfosEntities)
+            {
+                RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation = (ContainerLocalRenderInformation) e;
+                Chunk chunk = renderglobal$containerlocalrenderinformation.field_178036_a.getChunk();
                 ClassInheritanceMultiMap<Entity> classinheritancemultimap = chunk.func_177429_s()[renderglobal$containerlocalrenderinformation.field_178036_a.func_178568_j().func_177956_o() / 16];
 
                 if (!classinheritancemultimap.isEmpty())
@@ -616,53 +863,149 @@
                     while (true)
                     {
                         Entity entity2;
-                        boolean flag2;
+                        boolean flag4;
 
                         while (true)
                         {
                             if (!iterator.hasNext())
                             {
-                                continue label738;
+                                continue label900;
                             }
 
                             entity2 = (Entity)iterator.next();
-                            flag2 = this.field_175010_j.func_178635_a(entity2, p_180446_2_, d0, d1, d2) || entity2.field_70153_n == this.field_72777_q.field_71439_g;
+                            
+                            if(FPSPage.ENTITIES.contains(entity2.getClass())) {
+                            	continue;
+                            }
+                            
+                            boolean newRenderE = false;
+                            
+                            int entDist = Wrapper.getInstance().getEntityDistance();
+                            
+                            if (entDist != 64)
+                                newRenderE = true;
+                            boolean doIt = (newRenderE && entity2.func_70032_d(field_72777_q.field_71439_g) <= entDist);
+                            doIt = (entity2 instanceof EntityPlayer)||(entity2 instanceof EntityEnderPearl) ? true : doIt;
+                            if (!newRenderE || doIt) {
 
-                            if (!flag2)
+                            if (!flag || Reflector.callBoolean(entity2, Reflector.ForgeEntity_shouldRenderInPass, new Object[] {Integer.valueOf(i)}))
                             {
-                                break;
-                            }
+                                flag4 = this.field_175010_j.func_178635_a(entity2, p_180446_2_, d0, d1, d2) || entity2.field_70153_n == this.field_72777_q.field_71439_g;
 
-                            boolean flag3 = this.field_72777_q.func_175606_aa() instanceof EntityLivingBase ? ((EntityLivingBase)this.field_72777_q.func_175606_aa()).func_70608_bn() : false;
+                                if (!flag4)
+                                {
+                                    break;
+                                }
 
-                            if ((entity2 != this.field_72777_q.func_175606_aa() || this.field_72777_q.field_71474_y.field_74320_O != 0 || flag3) && (entity2.field_70163_u < 0.0D || entity2.field_70163_u >= 256.0D || this.field_72769_h.func_175667_e(new BlockPos(entity2))))
-                            {
-                                ++this.field_72749_I;
-                                this.field_175010_j.func_147937_a(entity2, p_180446_3_);
-                                break;
+                                boolean flag5 = this.field_72777_q.func_175606_aa() instanceof EntityLivingBase ? ((EntityLivingBase)this.field_72777_q.func_175606_aa()).func_70608_bn() : false;
+
+                                if ((entity2 != this.field_72777_q.func_175606_aa() || this.field_72777_q.field_71474_y.field_74320_O != 0 || flag5) && (entity2.field_70163_u < 0.0D || entity2.field_70163_u >= 256.0D || this.field_72769_h.func_175667_e(new BlockPos(entity2))))
+                                {
+                                    ++this.field_72749_I;
+                                    this.renderedEntity = entity2;
+
+                                    if (flag6)
+                                    {
+                                        Shaders.nextEntity(entity2);
+                                    }
+
+                                    this.field_175010_j.func_147937_a(entity2, p_180446_3_);
+                                    this.renderedEntity = null;
+                                    break;
+                                }
                             }
+                            }
                         }
 
-                        if (!flag2 && entity2 instanceof EntityWitherSkull)
+                        if (!flag4 && entity2 instanceof EntityWitherSkull && (!flag || Reflector.callBoolean(entity2, Reflector.ForgeEntity_shouldRenderInPass, new Object[] {Integer.valueOf(i)})))
                         {
+                            this.renderedEntity = entity2;
+
+                            if (flag6)
+                            {
+                                Shaders.nextEntity(entity2);
+                            }
+
                             this.field_72777_q.func_175598_ae().func_178630_b(entity2, p_180446_3_);
+                            this.renderedEntity = null;
                         }
                     }
                 }
             }
 
+            this.field_72777_q.field_71474_y.field_74347_j = flag7;
+
+            if (flag6)
+            {
+                Shaders.endEntities();
+                Shaders.beginBlockEntities();
+            }
+
             this.field_72769_h.field_72984_F.func_76318_c("blockentities");
             RenderHelper.func_74519_b();
 
-            for (RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation1 : this.field_72755_R)
+            if (Reflector.ForgeTileEntity_hasFastRenderer.exists())
             {
+                TileEntityRendererDispatcher.field_147556_a.preDrawBatch();
+            }
+
+            TileEntitySignRenderer.updateTextRenderDistance();
+            label1377:
+
+            for (Object e : this.renderInfosTileEntities)
+            {
+                RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation1 = (ContainerLocalRenderInformation) e;
                 List<TileEntity> list1 = renderglobal$containerlocalrenderinformation1.field_178036_a.func_178571_g().func_178485_b();
 
                 if (!list1.isEmpty())
                 {
-                    for (TileEntity tileentity2 : list1)
+                    Iterator iterator1 = list1.iterator();
+
+                    while (true)
                     {
-                        TileEntityRendererDispatcher.field_147556_a.func_180546_a(tileentity2, p_180446_3_, -1);
+                        TileEntity tileentity1;
+
+                        while (true)
+                        {
+                            if (!iterator1.hasNext())
+                            {
+                                continue label1377;
+                            }
+
+                            tileentity1 = (TileEntity)iterator1.next();
+
+                            if(FPSPage.TILE_ENTITIES.contains(tileentity1.getClass())) {
+                            	continue;
+                            }
+                            
+                            if (!flag1)
+                            {
+                                break;
+                            }
+
+                            if (Reflector.callBoolean(tileentity1, Reflector.ForgeTileEntity_shouldRenderInPass, new Object[] {Integer.valueOf(i)}))
+                            {
+                                AxisAlignedBB axisalignedbb1 = (AxisAlignedBB)Reflector.call(tileentity1, Reflector.ForgeTileEntity_getRenderBoundingBox, new Object[0]);
+
+                                if (axisalignedbb1 == null || p_180446_2_.func_78546_a(axisalignedbb1))
+                                {
+                                    break;
+                                }
+                            }
+                        }
+
+                        if (flag6)
+                        {
+                            Shaders.nextBlockEntity(tileentity1);
+                        }
+
+                        int dist = Wrapper.getInstance().getBlockDistance();
+                        boolean rdy = dist != 64;
+                        
+                        if(!rdy || (rdy && Minecraft.func_71410_x().field_71439_g != null && Math.sqrt(tileentity1.func_145835_a(Minecraft.func_71410_x().field_71439_g.field_70165_t, Minecraft.func_71410_x().field_71439_g.field_70163_u, Minecraft.func_71410_x().field_71439_g.field_70161_v)) <= dist)) {
+	                        TileEntityRendererDispatcher.field_147556_a.func_180546_a(tileentity1, p_180446_3_, -1);
+	                        ++this.countTileEntitiesRendered;
+                        }
                     }
                 }
             }
@@ -671,47 +1014,97 @@
             {
                 for (TileEntity tileentity : this.field_181024_n)
                 {
-                    TileEntityRendererDispatcher.field_147556_a.func_180546_a(tileentity, p_180446_3_, -1);
+                    if (!flag1 || Reflector.callBoolean(tileentity, Reflector.ForgeTileEntity_shouldRenderInPass, new Object[] {Integer.valueOf(i)}))
+                    {
+                        if (flag6)
+                        {
+                            Shaders.nextBlockEntity(tileentity);
+                        }
+
+                        TileEntityRendererDispatcher.field_147556_a.func_180546_a(tileentity, p_180446_3_, -1);
+                    }
                 }
             }
 
+            if (Reflector.ForgeTileEntity_hasFastRenderer.exists())
+            {
+                TileEntityRendererDispatcher.field_147556_a.drawBatch(i);
+            }
+
+            this.renderOverlayDamaged = true;
             this.func_180443_s();
 
             for (DestroyBlockProgress destroyblockprogress : this.field_72738_E.values())
             {
                 BlockPos blockpos = destroyblockprogress.func_180246_b();
-                TileEntity tileentity1 = this.field_72769_h.func_175625_s(blockpos);
+                TileEntity tileentity2 = this.field_72769_h.func_175625_s(blockpos);
 
-                if (tileentity1 instanceof TileEntityChest)
+                if (tileentity2 instanceof TileEntityChest)
                 {
-                    TileEntityChest tileentitychest = (TileEntityChest)tileentity1;
+                    TileEntityChest tileentitychest = (TileEntityChest)tileentity2;
 
                     if (tileentitychest.field_145991_k != null)
                     {
                         blockpos = blockpos.func_177972_a(EnumFacing.WEST);
-                        tileentity1 = this.field_72769_h.func_175625_s(blockpos);
+                        tileentity2 = this.field_72769_h.func_175625_s(blockpos);
                     }
                     else if (tileentitychest.field_145992_i != null)
                     {
                         blockpos = blockpos.func_177972_a(EnumFacing.NORTH);
-                        tileentity1 = this.field_72769_h.func_175625_s(blockpos);
+                        tileentity2 = this.field_72769_h.func_175625_s(blockpos);
                     }
                 }
 
                 Block block = this.field_72769_h.func_180495_p(blockpos).func_177230_c();
+                boolean flag8;
 
-                if (tileentity1 != null && (block instanceof BlockChest || block instanceof BlockEnderChest || block instanceof BlockSign || block instanceof BlockSkull))
+                if (flag1)
                 {
-                    TileEntityRendererDispatcher.field_147556_a.func_180546_a(tileentity1, p_180446_3_, destroyblockprogress.func_73106_e());
+                    flag8 = false;
+
+                    if (tileentity2 != null && Reflector.callBoolean(tileentity2, Reflector.ForgeTileEntity_shouldRenderInPass, new Object[] {Integer.valueOf(i)}) && Reflector.callBoolean(tileentity2, Reflector.ForgeTileEntity_canRenderBreaking, new Object[0]))
+                    {
+                        AxisAlignedBB axisalignedbb = (AxisAlignedBB)Reflector.call(tileentity2, Reflector.ForgeTileEntity_getRenderBoundingBox, new Object[0]);
+
+                        if (axisalignedbb != null)
+                        {
+                            flag8 = p_180446_2_.func_78546_a(axisalignedbb);
+                        }
+                    }
                 }
-            }
+                else
+                {
+                    flag8 = tileentity2 != null && (block instanceof BlockChest || block instanceof BlockEnderChest || block instanceof BlockSign || block instanceof BlockSkull);
+                }
 
+                if (flag8)
+                {
+                    if (flag6)
+                    {
+                        Shaders.nextBlockEntity(tileentity2);
+                    }
+
+                    TileEntityRendererDispatcher.field_147556_a.func_180546_a(tileentity2, p_180446_3_, destroyblockprogress.func_73106_e());
+                }
+            }
+    		
             this.func_174969_t();
+            this.renderOverlayDamaged = false;
+
+            if (flag6)
+            {
+                Shaders.endBlockEntities();
+            }
+
+            --renderEntitiesCounter;
             this.field_72777_q.field_71460_t.func_175072_h();
             this.field_72777_q.field_71424_I.func_76319_b();
         }
     }
 
+    /**
+     * Gets the render info for use on the Debug screen
+     */
     public String func_72735_c()
     {
         int i = this.field_175008_n.field_178164_f.length;
@@ -730,9 +1123,12 @@
         return String.format("C: %d/%d %sD: %d, %s", new Object[] {Integer.valueOf(j), Integer.valueOf(i), this.field_72777_q.field_175612_E ? "(s) " : "", Integer.valueOf(this.field_72739_F), this.field_174995_M.func_178504_a()});
     }
 
+    /**
+     * Gets the entities info for use on the Debug screen
+     */
     public String func_72723_d()
     {
-        return "E: " + this.field_72749_I + "/" + this.field_72748_H + ", B: " + this.field_72750_J + ", I: " + (this.field_72748_H - this.field_72750_J - this.field_72749_I);
+        return "E: " + this.field_72749_I + "/" + this.field_72748_H + ", B: " + this.field_72750_J + ", I: " + (this.field_72748_H - this.field_72750_J - this.field_72749_I) + ", " + Config.getVersionDebug();
     }
 
     public void func_174970_a(Entity p_174970_1_, double p_174970_2_, ICamera p_174970_4_, int p_174970_5_, boolean p_174970_6_)
@@ -758,6 +1154,11 @@
             this.field_175008_n.func_178163_a(p_174970_1_.field_70165_t, p_174970_1_.field_70161_v);
         }
 
+        if (Config.isDynamicLights())
+        {
+            DynamicLights.update(this);
+        }
+
         this.field_72769_h.field_72984_F.func_76318_c("renderlistcamera");
         double d3 = p_174970_1_.field_70142_S + (p_174970_1_.field_70165_t - p_174970_1_.field_70142_S) * p_174970_2_;
         double d4 = p_174970_1_.field_70137_T + (p_174970_1_.field_70163_u - p_174970_1_.field_70137_T) * p_174970_2_;
@@ -773,9 +1174,9 @@
         }
 
         this.field_72777_q.field_71424_I.func_76318_c("culling");
-        BlockPos blockpos1 = new BlockPos(d3, d4 + (double)p_174970_1_.func_70047_e(), d5);
-        RenderChunk renderchunk = this.field_175008_n.func_178161_a(blockpos1);
-        BlockPos blockpos = new BlockPos(MathHelper.func_76128_c(d3 / 16.0D) * 16, MathHelper.func_76128_c(d4 / 16.0D) * 16, MathHelper.func_76128_c(d5 / 16.0D) * 16);
+        BlockPos blockpos = new BlockPos(d3, d4 + (double)p_174970_1_.func_70047_e(), d5);
+        RenderChunk renderchunk = this.field_175008_n.func_178161_a(blockpos);
+        new BlockPos(MathHelper.func_76128_c(d3 / 16.0D) * 16, MathHelper.func_76128_c(d4 / 16.0D) * 16, MathHelper.func_76128_c(d5 / 16.0D) * 16);
         this.field_147595_R = this.field_147595_R || !this.field_175009_l.isEmpty() || p_174970_1_.field_70165_t != this.field_174997_H || p_174970_1_.field_70163_u != this.field_174998_I || p_174970_1_.field_70161_v != this.field_174999_J || (double)p_174970_1_.field_70125_A != this.field_175000_K || (double)p_174970_1_.field_70177_z != this.field_174994_L;
         this.field_174997_H = p_174970_1_.field_70165_t;
         this.field_174998_I = p_174970_1_.field_70163_u;
@@ -783,25 +1184,99 @@
         this.field_175000_K = (double)p_174970_1_.field_70125_A;
         this.field_174994_L = (double)p_174970_1_.field_70177_z;
         boolean flag = this.field_175001_U != null;
+        this.field_72777_q.field_71424_I.func_76318_c("update");
+        Lagometer.timerVisibility.start();
+        int i = this.getCountLoadedChunks();
 
-        if (!flag && this.field_147595_R)
+        if (i != this.countLoadedChunksPrev)
         {
+            this.countLoadedChunksPrev = i;
+            this.field_147595_R = true;
+        }
+
+        int j = 256;
+
+        if (!ChunkVisibility.isFinished())
+        {
+            this.field_147595_R = true;
+        }
+
+        if (!flag && this.field_147595_R && Config.isIntegratedServerRunning())
+        {
+            j = ChunkVisibility.getMaxChunkY(this.field_72769_h, p_174970_1_, this.field_72739_F);
+        }
+
+        RenderChunk renderchunk1 = this.field_175008_n.func_178161_a(new BlockPos(p_174970_1_.field_70165_t, p_174970_1_.field_70163_u, p_174970_1_.field_70161_v));
+
+        if (Shaders.isShadowPass)
+        {
+            this.field_72755_R = this.renderInfosShadow;
+            this.renderInfosEntities = this.renderInfosEntitiesShadow;
+            this.renderInfosTileEntities = this.renderInfosTileEntitiesShadow;
+
+            if (!flag && this.field_147595_R)
+            {
+                this.clearRenderInfos();
+
+                if (renderchunk1 != null && renderchunk1.func_178568_j().func_177956_o() > j)
+                {
+                    this.renderInfosEntities.add(renderchunk1.getRenderInfo());
+                }
+
+                Iterator<RenderChunk> iterator = ShadowUtils.makeShadowChunkIterator(this.field_72769_h, p_174970_2_, p_174970_1_, this.field_72739_F, this.field_175008_n);
+
+                while (iterator.hasNext())
+                {
+                    RenderChunk renderchunk2 = (RenderChunk)iterator.next();
+
+                    if (renderchunk2 != null && renderchunk2.func_178568_j().func_177956_o() <= j)
+                    {
+                        RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation = renderchunk2.getRenderInfo();
+
+                        if (!renderchunk2.field_178590_b.func_178489_a() || renderchunk2.func_178569_m())
+                        {
+                            this.field_72755_R.add(renderglobal$containerlocalrenderinformation);
+                        }
+
+                        if (ChunkUtils.hasEntities(renderchunk2.getChunk()))
+                        {
+                            this.renderInfosEntities.add(renderglobal$containerlocalrenderinformation);
+                        }
+
+                        if (renderchunk2.func_178571_g().func_178485_b().size() > 0)
+                        {
+                            this.renderInfosTileEntities.add(renderglobal$containerlocalrenderinformation);
+                        }
+                    }
+                }
+            }
+        }
+        else
+        {
+            this.field_72755_R = this.renderInfosNormal;
+            this.renderInfosEntities = this.renderInfosEntitiesNormal;
+            this.renderInfosTileEntities = this.renderInfosTileEntitiesNormal;
+        }
+
+        if (!flag && this.field_147595_R && !Shaders.isShadowPass)
+        {
             this.field_147595_R = false;
-            this.field_72755_R = Lists.<RenderGlobal.ContainerLocalRenderInformation>newArrayList();
-            Queue<RenderGlobal.ContainerLocalRenderInformation> queue = Lists.<RenderGlobal.ContainerLocalRenderInformation>newLinkedList();
+            this.clearRenderInfos();
+            this.visibilityDeque.clear();
+            Deque deque = this.visibilityDeque;
             boolean flag1 = this.field_72777_q.field_175612_E;
 
-            if (renderchunk != null)
+            if (renderchunk != null && renderchunk.func_178568_j().func_177956_o() <= j)
             {
                 boolean flag2 = false;
-                RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation3 = new RenderGlobal.ContainerLocalRenderInformation(renderchunk, (EnumFacing)null, 0);
-                Set<EnumFacing> set1 = this.func_174978_c(blockpos1);
+                RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation4 = new RenderGlobal.ContainerLocalRenderInformation(renderchunk, (EnumFacing)null, 0);
+                Set set1 = SET_ALL_FACINGS;
 
                 if (set1.size() == 1)
                 {
                     Vector3f vector3f = this.func_174962_a(p_174970_1_, p_174970_2_);
-                    EnumFacing enumfacing = EnumFacing.func_176737_a(vector3f.x, vector3f.y, vector3f.z).func_176734_d();
-                    set1.remove(enumfacing);
+                    EnumFacing enumfacing2 = EnumFacing.func_176737_a(vector3f.x, vector3f.y, vector3f.z).func_176734_d();
+                    set1.remove(enumfacing2);
                 }
 
                 if (set1.isEmpty())
@@ -811,95 +1286,144 @@
 
                 if (flag2 && !p_174970_6_)
                 {
-                    this.field_72755_R.add(renderglobal$containerlocalrenderinformation3);
+                    this.field_72755_R.add(renderglobal$containerlocalrenderinformation4);
                 }
                 else
                 {
-                    if (p_174970_6_ && this.field_72769_h.func_180495_p(blockpos1).func_177230_c().func_149662_c())
+                    if (p_174970_6_ && this.field_72769_h.func_180495_p(blockpos).func_177230_c().func_149662_c())
                     {
                         flag1 = false;
                     }
 
                     renderchunk.func_178577_a(p_174970_5_);
-                    queue.add(renderglobal$containerlocalrenderinformation3);
+                    deque.add(renderglobal$containerlocalrenderinformation4);
                 }
             }
             else
             {
-                int i = blockpos1.func_177956_o() > 0 ? 248 : 8;
+                int j1 = blockpos.func_177956_o() > 0 ? Math.min(j, 248) : 8;
 
-                for (int j = -this.field_72739_F; j <= this.field_72739_F; ++j)
+                if (renderchunk1 != null)
                 {
-                    for (int k = -this.field_72739_F; k <= this.field_72739_F; ++k)
+                    this.renderInfosEntities.add(renderchunk1.getRenderInfo());
+                }
+
+                for (int k = -this.field_72739_F; k <= this.field_72739_F; ++k)
+                {
+                    for (int l = -this.field_72739_F; l <= this.field_72739_F; ++l)
                     {
-                        RenderChunk renderchunk1 = this.field_175008_n.func_178161_a(new BlockPos((j << 4) + 8, i, (k << 4) + 8));
+                        RenderChunk renderchunk3 = this.field_175008_n.func_178161_a(new BlockPos((k << 4) + 8, j1, (l << 4) + 8));
 
-                        if (renderchunk1 != null && ((ICamera)p_174970_4_).func_78546_a(renderchunk1.field_178591_c))
+                        if (renderchunk3 != null && renderchunk3.isBoundingBoxInFrustum((ICamera)p_174970_4_, p_174970_5_))
                         {
-                            renderchunk1.func_178577_a(p_174970_5_);
-                            queue.add(new RenderGlobal.ContainerLocalRenderInformation(renderchunk1, (EnumFacing)null, 0));
+                            renderchunk3.func_178577_a(p_174970_5_);
+                            RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation1 = renderchunk3.getRenderInfo();
+                            renderglobal$containerlocalrenderinformation1.initialize((EnumFacing)null, 0);
+                            deque.add(renderglobal$containerlocalrenderinformation1);
                         }
                     }
                 }
             }
 
-            while (!((Queue)queue).isEmpty())
+            this.field_72777_q.field_71424_I.func_76320_a("iteration");
+            boolean flag3 = Config.isFogOn() && !Wrapper.getInstance().isFog();
+
+            while (!deque.isEmpty())
             {
-                RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation1 = (RenderGlobal.ContainerLocalRenderInformation)queue.poll();
-                RenderChunk renderchunk3 = renderglobal$containerlocalrenderinformation1.field_178036_a;
-                EnumFacing enumfacing2 = renderglobal$containerlocalrenderinformation1.field_178034_b;
-                BlockPos blockpos2 = renderchunk3.func_178568_j();
-                this.field_72755_R.add(renderglobal$containerlocalrenderinformation1);
+                RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation5 = (RenderGlobal.ContainerLocalRenderInformation)deque.poll();
+                RenderChunk renderchunk6 = renderglobal$containerlocalrenderinformation5.field_178036_a;
+                EnumFacing enumfacing1 = renderglobal$containerlocalrenderinformation5.field_178034_b;
+                CompiledChunk compiledchunk = renderchunk6.field_178590_b;
 
-                for (EnumFacing enumfacing1 : EnumFacing.values())
+                if (!compiledchunk.func_178489_a() || renderchunk6.func_178569_m())
                 {
-                    RenderChunk renderchunk2 = this.func_181562_a(blockpos, renderchunk3, enumfacing1);
+                    this.field_72755_R.add(renderglobal$containerlocalrenderinformation5);
+                }
 
-                    if ((!flag1 || !renderglobal$containerlocalrenderinformation1.field_178035_c.contains(enumfacing1.func_176734_d())) && (!flag1 || enumfacing2 == null || renderchunk3.func_178571_g().func_178495_a(enumfacing2.func_176734_d(), enumfacing1)) && renderchunk2 != null && renderchunk2.func_178577_a(p_174970_5_) && ((ICamera)p_174970_4_).func_78546_a(renderchunk2.field_178591_c))
+                if (ChunkUtils.hasEntities(renderchunk6.getChunk()))
+                {
+                    this.renderInfosEntities.add(renderglobal$containerlocalrenderinformation5);
+                }
+
+                if (compiledchunk.func_178485_b().size() > 0)
+                {
+                    this.renderInfosTileEntities.add(renderglobal$containerlocalrenderinformation5);
+                }
+
+                for (EnumFacing enumfacing : flag1 ? ChunkVisibility.getFacingsNotOpposite(renderglobal$containerlocalrenderinformation5.field_178035_c) : EnumFacing.field_82609_l)
+                {
+                    if (!flag1 || enumfacing1 == null || compiledchunk.func_178495_a(enumfacing1.func_176734_d(), enumfacing))
                     {
-                        RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation = new RenderGlobal.ContainerLocalRenderInformation(renderchunk2, enumfacing1, renderglobal$containerlocalrenderinformation1.field_178032_d + 1);
-                        renderglobal$containerlocalrenderinformation.field_178035_c.addAll(renderglobal$containerlocalrenderinformation1.field_178035_c);
-                        renderglobal$containerlocalrenderinformation.field_178035_c.add(enumfacing1);
-                        queue.add(renderglobal$containerlocalrenderinformation);
+                        RenderChunk renderchunk4 = this.getRenderChunkOffset(blockpos, renderchunk6, enumfacing, flag3, j);
+
+                        if (renderchunk4 != null && renderchunk4.func_178577_a(p_174970_5_) && renderchunk4.isBoundingBoxInFrustum((ICamera)p_174970_4_, p_174970_5_))
+                        {
+                            int i1 = renderglobal$containerlocalrenderinformation5.field_178035_c | 1 << enumfacing.ordinal();
+                            RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation2 = renderchunk4.getRenderInfo();
+                            renderglobal$containerlocalrenderinformation2.initialize(enumfacing, i1);
+                            deque.add(renderglobal$containerlocalrenderinformation2);
+                        }
                     }
                 }
             }
+
+            this.field_72777_q.field_71424_I.func_76319_b();
         }
 
+        this.field_72777_q.field_71424_I.func_76318_c("captureFrustum");
+
         if (this.field_175002_T)
         {
             this.func_174984_a(d3, d4, d5);
             this.field_175002_T = false;
         }
 
-        this.field_174995_M.func_178513_e();
-        Set<RenderChunk> set = this.field_175009_l;
-        this.field_175009_l = Sets.<RenderChunk>newLinkedHashSet();
+        Lagometer.timerVisibility.end();
 
-        for (RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation2 : this.field_72755_R)
+        if (Shaders.isShadowPass)
         {
-            RenderChunk renderchunk4 = renderglobal$containerlocalrenderinformation2.field_178036_a;
+            Shaders.mcProfilerEndSection();
+        }
+        else
+        {
+            this.field_72777_q.field_71424_I.func_76318_c("rebuildNear");
+            this.field_174995_M.func_178513_e();
+            Set<RenderChunk> set = this.field_175009_l;
+            this.field_175009_l = Sets.<RenderChunk>newLinkedHashSet();
+            Lagometer.timerChunkUpdate.start();
 
-            if (renderchunk4.func_178569_m() || set.contains(renderchunk4))
+            for (RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation3 : this.field_72755_R)
             {
-                this.field_147595_R = true;
+                RenderChunk renderchunk5 = renderglobal$containerlocalrenderinformation3.field_178036_a;
 
-                if (this.func_174983_a(blockpos, renderglobal$containerlocalrenderinformation2.field_178036_a))
+                if (renderchunk5.func_178569_m() || set.contains(renderchunk5))
                 {
-                    this.field_72777_q.field_71424_I.func_76320_a("build near");
-                    this.field_174995_M.func_178505_b(renderchunk4);
-                    renderchunk4.func_178575_a(false);
-                    this.field_72777_q.field_71424_I.func_76319_b();
+                    this.field_147595_R = true;
+                    BlockPos blockpos1 = renderchunk5.func_178568_j();
+                    boolean flag4 = blockpos.func_177954_c((double)(blockpos1.func_177958_n() + 8), (double)(blockpos1.func_177956_o() + 8), (double)(blockpos1.func_177952_p() + 8)) < 768.0D;
+
+                    if (!flag4)
+                    {
+                        this.field_175009_l.add(renderchunk5);
+                    }
+                    else if (!renderchunk5.isPlayerUpdate())
+                    {
+                        this.chunksToUpdateForced.add(renderchunk5);
+                    }
+                    else
+                    {
+                        this.field_72777_q.field_71424_I.func_76320_a("build near");
+                        this.field_174995_M.func_178505_b(renderchunk5);
+                        renderchunk5.func_178575_a(false);
+                        this.field_72777_q.field_71424_I.func_76319_b();
+                    }
                 }
-                else
-                {
-                    this.field_175009_l.add(renderchunk4);
-                }
             }
-        }
 
-        this.field_175009_l.addAll(set);
-        this.field_72777_q.field_71424_I.func_76319_b();
+            Lagometer.timerChunkUpdate.end();
+            this.field_175009_l.addAll(set);
+            this.field_72777_q.field_71424_I.func_76319_b();
+        }
     }
 
     private boolean func_174983_a(BlockPos p_174983_1_, RenderChunk p_174983_2_)
@@ -921,14 +1445,38 @@
                 visgraph.func_178606_a(blockpos$mutableblockpos);
             }
         }
-
         return visgraph.func_178609_b(p_174978_1_);
     }
 
-    private RenderChunk func_181562_a(BlockPos p_181562_1_, RenderChunk p_181562_2_, EnumFacing p_181562_3_)
+    private RenderChunk getRenderChunkOffset(BlockPos p_getRenderChunkOffset_1_, RenderChunk p_getRenderChunkOffset_2_, EnumFacing p_getRenderChunkOffset_3_, boolean p_getRenderChunkOffset_4_, int p_getRenderChunkOffset_5_)
     {
-        BlockPos blockpos = p_181562_2_.func_181701_a(p_181562_3_);
-        return MathHelper.func_76130_a(p_181562_1_.func_177958_n() - blockpos.func_177958_n()) > this.field_72739_F * 16 ? null : (blockpos.func_177956_o() >= 0 && blockpos.func_177956_o() < 256 ? (MathHelper.func_76130_a(p_181562_1_.func_177952_p() - blockpos.func_177952_p()) > this.field_72739_F * 16 ? null : this.field_175008_n.func_178161_a(blockpos)) : null);
+        RenderChunk renderchunk = p_getRenderChunkOffset_2_.getRenderChunkNeighbour(p_getRenderChunkOffset_3_);
+
+        if (renderchunk == null)
+        {
+            return null;
+        }
+        else if (renderchunk.func_178568_j().func_177956_o() > p_getRenderChunkOffset_5_)
+        {
+            return null;
+        }
+        else
+        {
+            if (p_getRenderChunkOffset_4_)
+            {
+                BlockPos blockpos = renderchunk.func_178568_j();
+                int i = p_getRenderChunkOffset_1_.func_177958_n() - blockpos.func_177958_n();
+                int j = p_getRenderChunkOffset_1_.func_177952_p() - blockpos.func_177952_p();
+                int k = i * i + j * j;
+
+                if (k > this.renderDistanceSq)
+                {
+                    return null;
+                }
+            }
+
+            return renderchunk;
+        }
     }
 
     private void func_174984_a(double p_174984_1_, double p_174984_3_, double p_174984_5_)
@@ -985,7 +1533,7 @@
     {
         RenderHelper.func_74518_a();
 
-        if (p_174977_1_ == EnumWorldBlockLayer.TRANSLUCENT)
+        if (p_174977_1_ == EnumWorldBlockLayer.TRANSLUCENT && !Shaders.isShadowPass)
         {
             this.field_72777_q.field_71424_I.func_76320_a("translucent_sort");
             double d0 = p_174977_5_.field_70165_t - this.field_147596_f;
@@ -998,12 +1546,13 @@
                 this.field_147597_g = p_174977_5_.field_70163_u;
                 this.field_147602_h = p_174977_5_.field_70161_v;
                 int k = 0;
+                this.chunksToResortTransparency.clear();
 
                 for (RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation : this.field_72755_R)
                 {
                     if (renderglobal$containerlocalrenderinformation.field_178036_a.field_178590_b.func_178492_d(p_174977_1_) && k++ < 15)
                     {
-                        this.field_174995_M.func_178509_c(renderglobal$containerlocalrenderinformation.field_178036_a);
+                        this.chunksToResortTransparency.add(renderglobal$containerlocalrenderinformation.field_178036_a);
                     }
                 }
             }
@@ -1029,10 +1578,22 @@
             }
         }
 
-        this.field_72777_q.field_71424_I.func_76318_c("render_" + p_174977_1_);
-        this.func_174982_a(p_174977_1_);
-        this.field_72777_q.field_71424_I.func_76319_b();
-        return l;
+        if (l == 0)
+        {
+            this.field_72777_q.field_71424_I.func_76319_b();
+            return l;
+        }
+        else
+        {
+            if (Config.isFogOff() || Wrapper.getInstance().isFog() && this.field_72777_q.field_71460_t.fogStandard)
+            {
+                GlStateManager.func_179106_n();
+            }
+            this.field_72777_q.field_71424_I.func_76318_c("render_" + p_174977_1_);
+            this.func_174982_a(p_174977_1_);
+            this.field_72777_q.field_71424_I.func_76319_b();
+            return l;
+        }
     }
 
     @SuppressWarnings("incomplete-switch")
@@ -1051,8 +1612,18 @@
             GL11.glEnableClientState(GL11.GL_COLOR_ARRAY);
         }
 
+        if (Config.isShaders())
+        {
+            ShadersRender.preRenderChunkLayer(p_174982_1_);
+        }
+
         this.field_174996_N.func_178001_a(p_174982_1_);
 
+        if (Config.isShaders())
+        {
+            ShadersRender.postRenderChunkLayer(p_174982_1_);
+        }
+
         if (OpenGlHelper.func_176075_f())
         {
             for (VertexFormatElement vertexformatelement : DefaultVertexFormats.field_176600_a.func_177343_g())
@@ -1065,11 +1636,13 @@
                     case POSITION:
                         GL11.glDisableClientState(GL11.GL_VERTEX_ARRAY);
                         break;
+
                     case UV:
                         OpenGlHelper.func_77472_b(OpenGlHelper.field_77478_a + i);
                         GL11.glDisableClientState(GL11.GL_TEXTURE_COORD_ARRAY);
                         OpenGlHelper.func_77472_b(OpenGlHelper.field_77478_a);
                         break;
+
                     case COLOR:
                         GL11.glDisableClientState(GL11.GL_COLOR_ARRAY);
                         GlStateManager.func_179117_G();
@@ -1096,6 +1669,12 @@
 
     public void func_72734_e()
     {
+        if (Config.isShaders() && Keyboard.isKeyDown(61) && Keyboard.isKeyDown(19))
+        {
+            Shaders.uninit();
+            Shaders.loadShaderPack();
+        }
+
         ++this.field_72773_u;
 
         if (this.field_72773_u % 20 == 0)
@@ -1106,61 +1685,90 @@
 
     private void func_180448_r()
     {
-        GlStateManager.func_179106_n();
-        GlStateManager.func_179118_c();
-        GlStateManager.func_179147_l();
-        GlStateManager.func_179120_a(770, 771, 1, 0);
-        RenderHelper.func_74518_a();
-        GlStateManager.func_179132_a(false);
-        this.field_72770_i.func_110577_a(field_110926_k);
-        Tessellator tessellator = Tessellator.func_178181_a();
-        WorldRenderer worldrenderer = tessellator.func_178180_c();
-
-        for (int i = 0; i < 6; ++i)
+        if (Config.isSkyEnabled())
         {
-            GlStateManager.func_179094_E();
+            GlStateManager.func_179106_n();
+            GlStateManager.func_179118_c();
+            GlStateManager.func_179147_l();
+            GlStateManager.func_179120_a(770, 771, 1, 0);
+            RenderHelper.func_74518_a();
+            GlStateManager.func_179132_a(false);
+            this.field_72770_i.func_110577_a(field_110926_k);
+            Tessellator tessellator = Tessellator.func_178181_a();
+            WorldRenderer worldrenderer = tessellator.func_178180_c();
 
-            if (i == 1)
+            for (int i = 0; i < 6; ++i)
             {
-                GlStateManager.func_179114_b(90.0F, 1.0F, 0.0F, 0.0F);
-            }
+                GlStateManager.func_179094_E();
 
-            if (i == 2)
-            {
-                GlStateManager.func_179114_b(-90.0F, 1.0F, 0.0F, 0.0F);
-            }
+                if (i == 1)
+                {
+                    GlStateManager.func_179114_b(90.0F, 1.0F, 0.0F, 0.0F);
+                }
 
-            if (i == 3)
-            {
-                GlStateManager.func_179114_b(180.0F, 1.0F, 0.0F, 0.0F);
-            }
+                if (i == 2)
+                {
+                    GlStateManager.func_179114_b(-90.0F, 1.0F, 0.0F, 0.0F);
+                }
 
-            if (i == 4)
-            {
-                GlStateManager.func_179114_b(90.0F, 0.0F, 0.0F, 1.0F);
-            }
+                if (i == 3)
+                {
+                    GlStateManager.func_179114_b(180.0F, 1.0F, 0.0F, 0.0F);
+                }
 
-            if (i == 5)
-            {
-                GlStateManager.func_179114_b(-90.0F, 0.0F, 0.0F, 1.0F);
+                if (i == 4)
+                {
+                    GlStateManager.func_179114_b(90.0F, 0.0F, 0.0F, 1.0F);
+                }
+
+                if (i == 5)
+                {
+                    GlStateManager.func_179114_b(-90.0F, 0.0F, 0.0F, 1.0F);
+                }
+
+                worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181709_i);
+                int j = 40;
+                int k = 40;
+                int l = 40;
+
+                if (Config.isCustomColors())
+                {
+                    Vec3 vec3 = new Vec3((double)j / 255.0D, (double)k / 255.0D, (double)l / 255.0D);
+                    vec3 = CustomColors.getWorldSkyColor(vec3, this.field_72769_h, this.field_72777_q.func_175606_aa(), 0.0F);
+                    j = (int)(vec3.field_72450_a * 255.0D);
+                    k = (int)(vec3.field_72448_b * 255.0D);
+                    l = (int)(vec3.field_72449_c * 255.0D);
+                }
+
+                worldrenderer.func_181662_b(-100.0D, -100.0D, -100.0D).func_181673_a(0.0D, 0.0D).func_181669_b(j, k, l, 255).func_181675_d();
+                worldrenderer.func_181662_b(-100.0D, -100.0D, 100.0D).func_181673_a(0.0D, 16.0D).func_181669_b(j, k, l, 255).func_181675_d();
+                worldrenderer.func_181662_b(100.0D, -100.0D, 100.0D).func_181673_a(16.0D, 16.0D).func_181669_b(j, k, l, 255).func_181675_d();
+                worldrenderer.func_181662_b(100.0D, -100.0D, -100.0D).func_181673_a(16.0D, 0.0D).func_181669_b(j, k, l, 255).func_181675_d();
+                tessellator.func_78381_a();
+                GlStateManager.func_179121_F();
             }
 
-            worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181709_i);
-            worldrenderer.func_181662_b(-100.0D, -100.0D, -100.0D).func_181673_a(0.0D, 0.0D).func_181669_b(40, 40, 40, 255).func_181675_d();
-            worldrenderer.func_181662_b(-100.0D, -100.0D, 100.0D).func_181673_a(0.0D, 16.0D).func_181669_b(40, 40, 40, 255).func_181675_d();
-            worldrenderer.func_181662_b(100.0D, -100.0D, 100.0D).func_181673_a(16.0D, 16.0D).func_181669_b(40, 40, 40, 255).func_181675_d();
-            worldrenderer.func_181662_b(100.0D, -100.0D, -100.0D).func_181673_a(16.0D, 0.0D).func_181669_b(40, 40, 40, 255).func_181675_d();
-            tessellator.func_78381_a();
-            GlStateManager.func_179121_F();
+            GlStateManager.func_179132_a(true);
+            GlStateManager.func_179098_w();
+            GlStateManager.func_179141_d();
+            GlStateManager.func_179084_k();
         }
-
-        GlStateManager.func_179132_a(true);
-        GlStateManager.func_179098_w();
-        GlStateManager.func_179141_d();
     }
 
     public void func_174976_a(float p_174976_1_, int p_174976_2_)
     {
+        if (Reflector.ForgeWorldProvider_getSkyRenderer.exists())
+        {
+            WorldProvider worldprovider = this.field_72777_q.field_71441_e.field_73011_w;
+            Object object = Reflector.call(worldprovider, Reflector.ForgeWorldProvider_getSkyRenderer, new Object[0]);
+
+            if (object != null)
+            {
+                Reflector.callVoid(object, Reflector.IRenderHandler_render, new Object[] {Float.valueOf(p_174976_1_), this.field_72769_h, this.field_72777_q});
+                return;
+            }
+        }
+
         if (this.field_72777_q.field_71441_e.field_73011_w.func_177502_q() == 1)
         {
             this.func_180448_r();
@@ -1168,7 +1776,21 @@
         else if (this.field_72777_q.field_71441_e.field_73011_w.func_76569_d())
         {
             GlStateManager.func_179090_x();
+            boolean flag = Config.isShaders();
+
+            if (flag)
+            {
+                Shaders.disableTexture2D();
+            }
+
             Vec3 vec3 = this.field_72769_h.func_72833_a(this.field_72777_q.func_175606_aa(), p_174976_1_);
+            vec3 = CustomColors.getSkyColor(vec3, this.field_72777_q.field_71441_e, this.field_72777_q.func_175606_aa().field_70165_t, this.field_72777_q.func_175606_aa().field_70163_u + 1.0D, this.field_72777_q.func_175606_aa().field_70161_v);
+
+            if (flag)
+            {
+                Shaders.setSkyColor(vec3);
+            }
+
             float f = (float)vec3.field_72450_a;
             float f1 = (float)vec3.field_72448_b;
             float f2 = (float)vec3.field_72449_c;
@@ -1188,32 +1810,58 @@
             WorldRenderer worldrenderer = tessellator.func_178180_c();
             GlStateManager.func_179132_a(false);
             GlStateManager.func_179127_m();
+
+            if (flag)
+            {
+                Shaders.enableFog();
+            }
+
             GlStateManager.func_179124_c(f, f1, f2);
 
-            if (this.field_175005_X)
+            if (flag)
             {
-                this.field_175012_t.func_177359_a();
-                GL11.glEnableClientState(GL11.GL_VERTEX_ARRAY);
-                GL11.glVertexPointer(3, GL11.GL_FLOAT, 12, 0L);
-                this.field_175012_t.func_177358_a(7);
-                this.field_175012_t.func_177361_b();
-                GL11.glDisableClientState(GL11.GL_VERTEX_ARRAY);
+                Shaders.preSkyList();
             }
-            else
+
+            if (Config.isSkyEnabled())
             {
-                GlStateManager.func_179148_o(this.field_72771_w);
+                if (this.field_175005_X)
+                {
+                    this.field_175012_t.func_177359_a();
+                    GL11.glEnableClientState(GL11.GL_VERTEX_ARRAY);
+                    GL11.glVertexPointer(3, GL11.GL_FLOAT, 12, 0L);
+                    this.field_175012_t.func_177358_a(7);
+                    this.field_175012_t.func_177361_b();
+                    GL11.glDisableClientState(GL11.GL_VERTEX_ARRAY);
+                }
+                else
+                {
+                    GlStateManager.func_179148_o(this.field_72771_w);
+                }
             }
 
             GlStateManager.func_179106_n();
+
+            if (flag)
+            {
+                Shaders.disableFog();
+            }
+
             GlStateManager.func_179118_c();
             GlStateManager.func_179147_l();
             GlStateManager.func_179120_a(770, 771, 1, 0);
             RenderHelper.func_74518_a();
             float[] afloat = this.field_72769_h.field_73011_w.func_76560_a(this.field_72769_h.func_72826_c(p_174976_1_), p_174976_1_);
 
-            if (afloat != null)
+            if (afloat != null && Config.isSunMoonEnabled())
             {
                 GlStateManager.func_179090_x();
+
+                if (flag)
+                {
+                    Shaders.disableTexture2D();
+                }
+
                 GlStateManager.func_179103_j(7425);
                 GlStateManager.func_179094_E();
                 GlStateManager.func_179114_b(90.0F, 1.0F, 0.0F, 0.0F);
@@ -1239,9 +1887,9 @@
 
                 for (int l = 0; l <= 16; ++l)
                 {
-                    float f21 = (float)l * (float)Math.PI * 2.0F / 16.0F;
-                    float f12 = MathHelper.func_76126_a(f21);
-                    float f13 = MathHelper.func_76134_b(f21);
+                    float f18 = (float)l * (float)Math.PI * 2.0F / 16.0F;
+                    float f12 = MathHelper.func_76126_a(f18);
+                    float f13 = MathHelper.func_76134_b(f18);
                     worldrenderer.func_181662_b((double)(f12 * 120.0F), (double)(f13 * 120.0F), (double)(-f13 * 40.0F * afloat[3])).func_181666_a(afloat[0], afloat[1], afloat[2], 0.0F).func_181675_d();
                 }
 
@@ -1251,42 +1899,78 @@
             }
 
             GlStateManager.func_179098_w();
+
+            if (flag)
+            {
+                Shaders.enableTexture2D();
+            }
+
             GlStateManager.func_179120_a(770, 1, 1, 0);
             GlStateManager.func_179094_E();
-            float f16 = 1.0F - this.field_72769_h.func_72867_j(p_174976_1_);
-            GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, f16);
+            float f15 = 1.0F - this.field_72769_h.func_72867_j(p_174976_1_);
+            GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, f15);
             GlStateManager.func_179114_b(-90.0F, 0.0F, 1.0F, 0.0F);
+            CustomSky.renderSky(this.field_72769_h, this.field_72770_i, p_174976_1_);
+            
+
+            if (flag)
+            {
+                Shaders.preCelestialRotate();
+            }
+
             GlStateManager.func_179114_b(this.field_72769_h.func_72826_c(p_174976_1_) * 360.0F, 1.0F, 0.0F, 0.0F);
-            float f17 = 30.0F;
-            this.field_72770_i.func_110577_a(field_110928_i);
-            worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181707_g);
-            worldrenderer.func_181662_b((double)(-f17), 100.0D, (double)(-f17)).func_181673_a(0.0D, 0.0D).func_181675_d();
-            worldrenderer.func_181662_b((double)f17, 100.0D, (double)(-f17)).func_181673_a(1.0D, 0.0D).func_181675_d();
-            worldrenderer.func_181662_b((double)f17, 100.0D, (double)f17).func_181673_a(1.0D, 1.0D).func_181675_d();
-            worldrenderer.func_181662_b((double)(-f17), 100.0D, (double)f17).func_181673_a(0.0D, 1.0D).func_181675_d();
-            tessellator.func_78381_a();
-            f17 = 20.0F;
-            this.field_72770_i.func_110577_a(field_110927_h);
-            int i = this.field_72769_h.func_72853_d();
-            int k = i % 4;
-            int i1 = i / 4 % 2;
-            float f22 = (float)(k + 0) / 4.0F;
-            float f23 = (float)(i1 + 0) / 2.0F;
-            float f24 = (float)(k + 1) / 4.0F;
-            float f14 = (float)(i1 + 1) / 2.0F;
-            worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181707_g);
-            worldrenderer.func_181662_b((double)(-f17), -100.0D, (double)f17).func_181673_a((double)f24, (double)f14).func_181675_d();
-            worldrenderer.func_181662_b((double)f17, -100.0D, (double)f17).func_181673_a((double)f22, (double)f14).func_181675_d();
-            worldrenderer.func_181662_b((double)f17, -100.0D, (double)(-f17)).func_181673_a((double)f22, (double)f23).func_181675_d();
-            worldrenderer.func_181662_b((double)(-f17), -100.0D, (double)(-f17)).func_181673_a((double)f24, (double)f23).func_181675_d();
-            tessellator.func_78381_a();
+
+            if (flag)
+            {
+                Shaders.postCelestialRotate();
+            }
+
+            float f16 = 30.0F;
+
+            if (Config.isSunTexture())
+            {
+                this.field_72770_i.func_110577_a(field_110928_i);
+                worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181707_g);
+                worldrenderer.func_181662_b((double)(-f16), 100.0D, (double)(-f16)).func_181673_a(0.0D, 0.0D).func_181675_d();
+                worldrenderer.func_181662_b((double)f16, 100.0D, (double)(-f16)).func_181673_a(1.0D, 0.0D).func_181675_d();
+                worldrenderer.func_181662_b((double)f16, 100.0D, (double)f16).func_181673_a(1.0D, 1.0D).func_181675_d();
+                worldrenderer.func_181662_b((double)(-f16), 100.0D, (double)f16).func_181673_a(0.0D, 1.0D).func_181675_d();
+                tessellator.func_78381_a();
+            }
+
+            f16 = 20.0F;
+
+            if (Config.isMoonTexture())
+            {
+                this.field_72770_i.func_110577_a(field_110927_h);
+                int i = this.field_72769_h.func_72853_d();
+                int k = i % 4;
+                int i1 = i / 4 % 2;
+                float f19 = (float)(k + 0) / 4.0F;
+                float f21 = (float)(i1 + 0) / 2.0F;
+                float f23 = (float)(k + 1) / 4.0F;
+                float f14 = (float)(i1 + 1) / 2.0F;
+                worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181707_g);
+                worldrenderer.func_181662_b((double)(-f16), -100.0D, (double)f16).func_181673_a((double)f23, (double)f14).func_181675_d();
+                worldrenderer.func_181662_b((double)f16, -100.0D, (double)f16).func_181673_a((double)f19, (double)f14).func_181675_d();
+                worldrenderer.func_181662_b((double)f16, -100.0D, (double)(-f16)).func_181673_a((double)f19, (double)f21).func_181675_d();
+                worldrenderer.func_181662_b((double)(-f16), -100.0D, (double)(-f16)).func_181673_a((double)f23, (double)f21).func_181675_d();
+                tessellator.func_78381_a();
+            }
+
             GlStateManager.func_179090_x();
-            float f15 = this.field_72769_h.func_72880_h(p_174976_1_) * f16;
 
-            if (f15 > 0.0F)
+            if (flag)
             {
-                GlStateManager.func_179131_c(f15, f15, f15, f15);
+                Shaders.disableTexture2D();
+            }
 
+            float f17 = this.field_72769_h.func_72880_h(p_174976_1_) * f15;
+
+            if (f17 > 0.0F && Config.isStarsEnabled() && !CustomSky.hasSkyLayers(this.field_72769_h))
+            {
+                GlStateManager.func_179131_c(f17, f17, f17, f17);
+
                 if (this.field_175005_X)
                 {
                     this.field_175013_s.func_177359_a();
@@ -1306,8 +1990,20 @@
             GlStateManager.func_179084_k();
             GlStateManager.func_179141_d();
             GlStateManager.func_179127_m();
+
+            if (flag)
+            {
+                Shaders.enableFog();
+            }
+
             GlStateManager.func_179121_F();
             GlStateManager.func_179090_x();
+
+            if (flag)
+            {
+                Shaders.disableTexture2D();
+            }
+
             GlStateManager.func_179124_c(0.0F, 0.0F, 0.0F);
             double d0 = this.field_72777_q.field_71439_g.func_174824_e(p_174976_1_).field_72448_b - this.field_72769_h.func_72919_O();
 
@@ -1331,24 +2027,24 @@
                 }
 
                 GlStateManager.func_179121_F();
-                float f18 = 1.0F;
-                float f19 = -((float)(d0 + 65.0D));
-                float f20 = -1.0F;
+                float f20 = 1.0F;
+                float f22 = -((float)(d0 + 65.0D));
+                float f24 = -1.0F;
                 worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181706_f);
-                worldrenderer.func_181662_b(-1.0D, (double)f19, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
-                worldrenderer.func_181662_b(1.0D, (double)f19, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
+                worldrenderer.func_181662_b(-1.0D, (double)f22, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
+                worldrenderer.func_181662_b(1.0D, (double)f22, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
                 worldrenderer.func_181662_b(1.0D, -1.0D, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
                 worldrenderer.func_181662_b(-1.0D, -1.0D, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
                 worldrenderer.func_181662_b(-1.0D, -1.0D, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
                 worldrenderer.func_181662_b(1.0D, -1.0D, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
-                worldrenderer.func_181662_b(1.0D, (double)f19, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
-                worldrenderer.func_181662_b(-1.0D, (double)f19, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
+                worldrenderer.func_181662_b(1.0D, (double)f22, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
+                worldrenderer.func_181662_b(-1.0D, (double)f22, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
                 worldrenderer.func_181662_b(1.0D, -1.0D, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
                 worldrenderer.func_181662_b(1.0D, -1.0D, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
-                worldrenderer.func_181662_b(1.0D, (double)f19, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
-                worldrenderer.func_181662_b(1.0D, (double)f19, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
-                worldrenderer.func_181662_b(-1.0D, (double)f19, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
-                worldrenderer.func_181662_b(-1.0D, (double)f19, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
+                worldrenderer.func_181662_b(1.0D, (double)f22, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
+                worldrenderer.func_181662_b(1.0D, (double)f22, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
+                worldrenderer.func_181662_b(-1.0D, (double)f22, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
+                worldrenderer.func_181662_b(-1.0D, (double)f22, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
                 worldrenderer.func_181662_b(-1.0D, -1.0D, 1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
                 worldrenderer.func_181662_b(-1.0D, -1.0D, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
                 worldrenderer.func_181662_b(-1.0D, -1.0D, -1.0D).func_181669_b(0, 0, 0, 255).func_181675_d();
@@ -1367,81 +2063,149 @@
                 GlStateManager.func_179124_c(f, f1, f2);
             }
 
+            if (this.field_72777_q.field_71474_y.field_151451_c <= 4)
+            {
+                GlStateManager.func_179124_c(this.field_72777_q.field_71460_t.field_175080_Q, this.field_72777_q.field_71460_t.field_175082_R, this.field_72777_q.field_71460_t.field_175081_S);
+            }
+
             GlStateManager.func_179094_E();
             GlStateManager.func_179109_b(0.0F, -((float)(d0 - 16.0D)), 0.0F);
-            GlStateManager.func_179148_o(this.field_72781_x);
+
+            if (Config.isSkyEnabled())
+            {
+                if (this.field_175005_X)
+                {
+                    this.field_175011_u.func_177359_a();
+                    GlStateManager.glEnableClientState(32884);
+                    GlStateManager.glVertexPointer(3, 5126, 12, 0);
+                    this.field_175011_u.func_177358_a(7);
+                    this.field_175011_u.func_177361_b();
+                    GlStateManager.glDisableClientState(32884);
+                }
+                else
+                {
+                    GlStateManager.func_179148_o(this.field_72781_x);
+                }
+            }
+
             GlStateManager.func_179121_F();
             GlStateManager.func_179098_w();
+
+            if (flag)
+            {
+                Shaders.enableTexture2D();
+            }
+
             GlStateManager.func_179132_a(true);
         }
     }
 
     public void func_180447_b(float p_180447_1_, int p_180447_2_)
     {
-        if (this.field_72777_q.field_71441_e.field_73011_w.func_76569_d())
+        if (!Config.isCloudsOff())
         {
-            if (this.field_72777_q.field_71474_y.func_181147_e() == 2)
+            if (Reflector.ForgeWorldProvider_getCloudRenderer.exists())
             {
-                this.func_180445_c(p_180447_1_, p_180447_2_);
+                WorldProvider worldprovider = this.field_72777_q.field_71441_e.field_73011_w;
+                Object object = Reflector.call(worldprovider, Reflector.ForgeWorldProvider_getCloudRenderer, new Object[0]);
+
+                if (object != null)
+                {
+                    Reflector.callVoid(object, Reflector.IRenderHandler_render, new Object[] {Float.valueOf(p_180447_1_), this.field_72769_h, this.field_72777_q});
+                    return;
+                }
             }
-            else
-            {
-                GlStateManager.func_179129_p();
-                float f = (float)(this.field_72777_q.func_175606_aa().field_70137_T + (this.field_72777_q.func_175606_aa().field_70163_u - this.field_72777_q.func_175606_aa().field_70137_T) * (double)p_180447_1_);
-                int i = 32;
-                int j = 8;
-                Tessellator tessellator = Tessellator.func_178181_a();
-                WorldRenderer worldrenderer = tessellator.func_178180_c();
-                this.field_72770_i.func_110577_a(field_110925_j);
-                GlStateManager.func_179147_l();
-                GlStateManager.func_179120_a(770, 771, 1, 0);
-                Vec3 vec3 = this.field_72769_h.func_72824_f(p_180447_1_);
-                float f1 = (float)vec3.field_72450_a;
-                float f2 = (float)vec3.field_72448_b;
-                float f3 = (float)vec3.field_72449_c;
 
-                if (p_180447_2_ != 2)
+            if (this.field_72777_q.field_71441_e.field_73011_w.func_76569_d())
+            {
+                if (Config.isShaders())
                 {
-                    float f4 = (f1 * 30.0F + f2 * 59.0F + f3 * 11.0F) / 100.0F;
-                    float f5 = (f1 * 30.0F + f2 * 70.0F) / 100.0F;
-                    float f6 = (f1 * 30.0F + f3 * 70.0F) / 100.0F;
-                    f1 = f4;
-                    f2 = f5;
-                    f3 = f6;
+                    Shaders.beginClouds();
                 }
 
-                float f10 = 4.8828125E-4F;
-                double d2 = (double)((float)this.field_72773_u + p_180447_1_);
-                double d0 = this.field_72777_q.func_175606_aa().field_70169_q + (this.field_72777_q.func_175606_aa().field_70165_t - this.field_72777_q.func_175606_aa().field_70169_q) * (double)p_180447_1_ + d2 * 0.029999999329447746D;
-                double d1 = this.field_72777_q.func_175606_aa().field_70166_s + (this.field_72777_q.func_175606_aa().field_70161_v - this.field_72777_q.func_175606_aa().field_70166_s) * (double)p_180447_1_;
-                int k = MathHelper.func_76128_c(d0 / 2048.0D);
-                int l = MathHelper.func_76128_c(d1 / 2048.0D);
-                d0 = d0 - (double)(k * 2048);
-                d1 = d1 - (double)(l * 2048);
-                float f7 = this.field_72769_h.field_73011_w.func_76571_f() - f + 0.33F;
-                float f8 = (float)(d0 * 4.8828125E-4D);
-                float f9 = (float)(d1 * 4.8828125E-4D);
-                worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181709_i);
-
-                for (int i1 = -256; i1 < 256; i1 += 32)
+                if (Config.isCloudsFancy())
                 {
-                    for (int j1 = -256; j1 < 256; j1 += 32)
+                    this.func_180445_c(p_180447_1_, p_180447_2_);
+                }
+                else
+                {
+                    float f9 = p_180447_1_;
+                    p_180447_1_ = 0.0F;
+                    GlStateManager.func_179129_p();
+                    float f10 = (float)(this.field_72777_q.func_175606_aa().field_70137_T + (this.field_72777_q.func_175606_aa().field_70163_u - this.field_72777_q.func_175606_aa().field_70137_T) * (double)p_180447_1_);
+                    int i = 32;
+                    int j = 8;
+                    Tessellator tessellator = Tessellator.func_178181_a();
+                    WorldRenderer worldrenderer = tessellator.func_178180_c();
+                    this.field_72770_i.func_110577_a(field_110925_j);
+                    GlStateManager.func_179147_l();
+                    GlStateManager.func_179120_a(770, 771, 1, 0);
+                    Vec3 vec3 = this.field_72769_h.func_72824_f(p_180447_1_);
+                    float f = (float)vec3.field_72450_a;
+                    float f1 = (float)vec3.field_72448_b;
+                    float f2 = (float)vec3.field_72449_c;
+                    this.cloudRenderer.prepareToRender(false, this.field_72773_u, f9, vec3);
+
+                    if (this.cloudRenderer.shouldUpdateGlList())
                     {
-                        worldrenderer.func_181662_b((double)(i1 + 0), (double)f7, (double)(j1 + 32)).func_181673_a((double)((float)(i1 + 0) * 4.8828125E-4F + f8), (double)((float)(j1 + 32) * 4.8828125E-4F + f9)).func_181666_a(f1, f2, f3, 0.8F).func_181675_d();
-                        worldrenderer.func_181662_b((double)(i1 + 32), (double)f7, (double)(j1 + 32)).func_181673_a((double)((float)(i1 + 32) * 4.8828125E-4F + f8), (double)((float)(j1 + 32) * 4.8828125E-4F + f9)).func_181666_a(f1, f2, f3, 0.8F).func_181675_d();
-                        worldrenderer.func_181662_b((double)(i1 + 32), (double)f7, (double)(j1 + 0)).func_181673_a((double)((float)(i1 + 32) * 4.8828125E-4F + f8), (double)((float)(j1 + 0) * 4.8828125E-4F + f9)).func_181666_a(f1, f2, f3, 0.8F).func_181675_d();
-                        worldrenderer.func_181662_b((double)(i1 + 0), (double)f7, (double)(j1 + 0)).func_181673_a((double)((float)(i1 + 0) * 4.8828125E-4F + f8), (double)((float)(j1 + 0) * 4.8828125E-4F + f9)).func_181666_a(f1, f2, f3, 0.8F).func_181675_d();
+                        this.cloudRenderer.startUpdateGlList();
+
+                        if (p_180447_2_ != 2)
+                        {
+                            float f3 = (f * 30.0F + f1 * 59.0F + f2 * 11.0F) / 100.0F;
+                            float f4 = (f * 30.0F + f1 * 70.0F) / 100.0F;
+                            float f5 = (f * 30.0F + f2 * 70.0F) / 100.0F;
+                            f = f3;
+                            f1 = f4;
+                            f2 = f5;
+                        }
+
+                        float f11 = 4.8828125E-4F;
+                        double d2 = (double)((float)this.field_72773_u + p_180447_1_);
+                        double d0 = this.field_72777_q.func_175606_aa().field_70169_q + (this.field_72777_q.func_175606_aa().field_70165_t - this.field_72777_q.func_175606_aa().field_70169_q) * (double)p_180447_1_ + d2 * 0.029999999329447746D;
+                        double d1 = this.field_72777_q.func_175606_aa().field_70166_s + (this.field_72777_q.func_175606_aa().field_70161_v - this.field_72777_q.func_175606_aa().field_70166_s) * (double)p_180447_1_;
+                        int k = MathHelper.func_76128_c(d0 / 2048.0D);
+                        int l = MathHelper.func_76128_c(d1 / 2048.0D);
+                        d0 = d0 - (double)(k * 2048);
+                        d1 = d1 - (double)(l * 2048);
+                        float f6 = this.field_72769_h.field_73011_w.func_76571_f() - f10 + 0.33F;
+                        f6 = f6 + this.field_72777_q.field_71474_y.ofCloudsHeight * 128.0F;
+                        float f7 = (float)(d0 * 4.8828125E-4D);
+                        float f8 = (float)(d1 * 4.8828125E-4D);
+                        worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181709_i);
+
+                        for (int i1 = -256; i1 < 256; i1 += 32)
+                        {
+                            for (int j1 = -256; j1 < 256; j1 += 32)
+                            {
+                                worldrenderer.func_181662_b((double)(i1 + 0), (double)f6, (double)(j1 + 32)).func_181673_a((double)((float)(i1 + 0) * 4.8828125E-4F + f7), (double)((float)(j1 + 32) * 4.8828125E-4F + f8)).func_181666_a(f, f1, f2, 0.8F).func_181675_d();
+                                worldrenderer.func_181662_b((double)(i1 + 32), (double)f6, (double)(j1 + 32)).func_181673_a((double)((float)(i1 + 32) * 4.8828125E-4F + f7), (double)((float)(j1 + 32) * 4.8828125E-4F + f8)).func_181666_a(f, f1, f2, 0.8F).func_181675_d();
+                                worldrenderer.func_181662_b((double)(i1 + 32), (double)f6, (double)(j1 + 0)).func_181673_a((double)((float)(i1 + 32) * 4.8828125E-4F + f7), (double)((float)(j1 + 0) * 4.8828125E-4F + f8)).func_181666_a(f, f1, f2, 0.8F).func_181675_d();
+                                worldrenderer.func_181662_b((double)(i1 + 0), (double)f6, (double)(j1 + 0)).func_181673_a((double)((float)(i1 + 0) * 4.8828125E-4F + f7), (double)((float)(j1 + 0) * 4.8828125E-4F + f8)).func_181666_a(f, f1, f2, 0.8F).func_181675_d();
+                            }
+                        }
+
+                        tessellator.func_78381_a();
+                        this.cloudRenderer.endUpdateGlList();
                     }
+
+                    this.cloudRenderer.renderGlList();
+                    GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
+                    GlStateManager.func_179084_k();
+                    GlStateManager.func_179089_o();
                 }
 
-                tessellator.func_78381_a();
-                GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
-                GlStateManager.func_179084_k();
-                GlStateManager.func_179089_o();
+                if (Config.isShaders())
+                {
+                    Shaders.endClouds();
+                }
             }
         }
     }
 
+    /**
+     * Checks if the given position is to be rendered with cloud fog
+     */
     public boolean func_72721_a(double p_72721_1_, double p_72721_3_, double p_72721_5_, float p_72721_7_)
     {
         return false;
@@ -1449,6 +2213,7 @@
 
     private void func_180445_c(float p_180445_1_, int p_180445_2_)
     {
+        p_180445_1_ = 0.0F;
         GlStateManager.func_179129_p();
         float f = (float)(this.field_72777_q.func_175606_aa().field_70137_T + (this.field_72777_q.func_175606_aa().field_70163_u - this.field_72777_q.func_175606_aa().field_70137_T) * (double)p_180445_1_);
         Tessellator tessellator = Tessellator.func_178181_a();
@@ -1459,6 +2224,7 @@
         double d1 = (this.field_72777_q.func_175606_aa().field_70169_q + (this.field_72777_q.func_175606_aa().field_70165_t - this.field_72777_q.func_175606_aa().field_70169_q) * (double)p_180445_1_ + d0 * 0.029999999329447746D) / 12.0D;
         double d2 = (this.field_72777_q.func_175606_aa().field_70166_s + (this.field_72777_q.func_175606_aa().field_70161_v - this.field_72777_q.func_175606_aa().field_70166_s) * (double)p_180445_1_) / 12.0D + 0.33000001311302185D;
         float f3 = this.field_72769_h.field_73011_w.func_76571_f() - f + 0.33F;
+        f3 = f3 + this.field_72777_q.field_71474_y.ofCloudsHeight * 128.0F;
         int i = MathHelper.func_76128_c(d1 / 2048.0D);
         int j = MathHelper.func_76128_c(d2 / 2048.0D);
         d1 = d1 - (double)(i * 2048);
@@ -1470,6 +2236,7 @@
         float f4 = (float)vec3.field_72450_a;
         float f5 = (float)vec3.field_72448_b;
         float f6 = (float)vec3.field_72449_c;
+        this.cloudRenderer.prepareToRender(true, this.field_72773_u, p_180445_1_, vec3);
 
         if (p_180445_2_ != 2)
         {
@@ -1513,21 +2280,30 @@
                     case 0:
                         GlStateManager.func_179135_a(false, true, true, true);
                         break;
+
                     case 1:
                         GlStateManager.func_179135_a(true, false, false, true);
                         break;
+
                     case 2:
                         GlStateManager.func_179135_a(true, true, true, true);
                 }
             }
 
-            for (int j1 = -3; j1 <= 4; ++j1)
+            this.cloudRenderer.renderGlList();
+        }
+
+        if (this.cloudRenderer.shouldUpdateGlList())
+        {
+            this.cloudRenderer.startUpdateGlList();
+
+            for (int l1 = -3; l1 <= 4; ++l1)
             {
-                for (int k1 = -3; k1 <= 4; ++k1)
+                for (int j1 = -3; j1 <= 4; ++j1)
                 {
                     worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181712_l);
-                    float f22 = (float)(j1 * 8);
-                    float f23 = (float)(k1 * 8);
+                    float f22 = (float)(l1 * 8);
+                    float f23 = (float)(j1 * 8);
                     float f24 = f22 - f19;
                     float f25 = f23 - f20;
 
@@ -1547,18 +2323,18 @@
                         worldrenderer.func_181662_b((double)(f24 + 0.0F), (double)(f3 + 4.0F - 9.765625E-4F), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + 0.0F) * 0.00390625F + f17), (double)((f23 + 0.0F) * 0.00390625F + f18)).func_181666_a(f4, f5, f6, 0.8F).func_181663_c(0.0F, 1.0F, 0.0F).func_181675_d();
                     }
 
-                    if (j1 > -1)
+                    if (l1 > -1)
                     {
-                        for (int l1 = 0; l1 < 8; ++l1)
+                        for (int k1 = 0; k1 < 8; ++k1)
                         {
-                            worldrenderer.func_181662_b((double)(f24 + (float)l1 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + 8.0F)).func_181673_a((double)((f22 + (float)l1 + 0.5F) * 0.00390625F + f17), (double)((f23 + 8.0F) * 0.00390625F + f18)).func_181666_a(f26, f27, f28, 0.8F).func_181663_c(-1.0F, 0.0F, 0.0F).func_181675_d();
-                            worldrenderer.func_181662_b((double)(f24 + (float)l1 + 0.0F), (double)(f3 + 4.0F), (double)(f25 + 8.0F)).func_181673_a((double)((f22 + (float)l1 + 0.5F) * 0.00390625F + f17), (double)((f23 + 8.0F) * 0.00390625F + f18)).func_181666_a(f26, f27, f28, 0.8F).func_181663_c(-1.0F, 0.0F, 0.0F).func_181675_d();
-                            worldrenderer.func_181662_b((double)(f24 + (float)l1 + 0.0F), (double)(f3 + 4.0F), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + (float)l1 + 0.5F) * 0.00390625F + f17), (double)((f23 + 0.0F) * 0.00390625F + f18)).func_181666_a(f26, f27, f28, 0.8F).func_181663_c(-1.0F, 0.0F, 0.0F).func_181675_d();
-                            worldrenderer.func_181662_b((double)(f24 + (float)l1 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + (float)l1 + 0.5F) * 0.00390625F + f17), (double)((f23 + 0.0F) * 0.00390625F + f18)).func_181666_a(f26, f27, f28, 0.8F).func_181663_c(-1.0F, 0.0F, 0.0F).func_181675_d();
+                            worldrenderer.func_181662_b((double)(f24 + (float)k1 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + 8.0F)).func_181673_a((double)((f22 + (float)k1 + 0.5F) * 0.00390625F + f17), (double)((f23 + 8.0F) * 0.00390625F + f18)).func_181666_a(f26, f27, f28, 0.8F).func_181663_c(-1.0F, 0.0F, 0.0F).func_181675_d();
+                            worldrenderer.func_181662_b((double)(f24 + (float)k1 + 0.0F), (double)(f3 + 4.0F), (double)(f25 + 8.0F)).func_181673_a((double)((f22 + (float)k1 + 0.5F) * 0.00390625F + f17), (double)((f23 + 8.0F) * 0.00390625F + f18)).func_181666_a(f26, f27, f28, 0.8F).func_181663_c(-1.0F, 0.0F, 0.0F).func_181675_d();
+                            worldrenderer.func_181662_b((double)(f24 + (float)k1 + 0.0F), (double)(f3 + 4.0F), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + (float)k1 + 0.5F) * 0.00390625F + f17), (double)((f23 + 0.0F) * 0.00390625F + f18)).func_181666_a(f26, f27, f28, 0.8F).func_181663_c(-1.0F, 0.0F, 0.0F).func_181675_d();
+                            worldrenderer.func_181662_b((double)(f24 + (float)k1 + 0.0F), (double)(f3 + 0.0F), (double)(f25 + 0.0F)).func_181673_a((double)((f22 + (float)k1 + 0.5F) * 0.00390625F + f17), (double)((f23 + 0.0F) * 0.00390625F + f18)).func_181666_a(f26, f27, f28, 0.8F).func_181663_c(-1.0F, 0.0F, 0.0F).func_181675_d();
                         }
                     }
 
-                    if (j1 <= 1)
+                    if (l1 <= 1)
                     {
                         for (int i2 = 0; i2 < 8; ++i2)
                         {
@@ -1569,7 +2345,7 @@
                         }
                     }
 
-                    if (k1 > -1)
+                    if (j1 > -1)
                     {
                         for (int j2 = 0; j2 < 8; ++j2)
                         {
@@ -1580,7 +2356,7 @@
                         }
                     }
 
-                    if (k1 <= 1)
+                    if (j1 <= 1)
                     {
                         for (int k2 = 0; k2 < 8; ++k2)
                         {
@@ -1594,6 +2370,8 @@
                     tessellator.func_78381_a();
                 }
             }
+
+            this.cloudRenderer.endUpdateGlList();
         }
 
         GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
@@ -1603,11 +2381,12 @@
 
     public void func_174967_a(long p_174967_1_)
     {
+        p_174967_1_ = (long)((double)p_174967_1_ + 1.0E8D);
         this.field_147595_R |= this.field_174995_M.func_178516_a(p_174967_1_);
 
-        if (!this.field_175009_l.isEmpty())
+        if (this.chunksToUpdateForced.size() > 0)
         {
-            Iterator<RenderChunk> iterator = this.field_175009_l.iterator();
+            Iterator iterator = this.chunksToUpdateForced.iterator();
 
             while (iterator.hasNext())
             {
@@ -1620,12 +2399,66 @@
 
                 renderchunk.func_178575_a(false);
                 iterator.remove();
-                long i = p_174967_1_ - System.nanoTime();
+                this.field_175009_l.remove(renderchunk);
+                this.chunksToResortTransparency.remove(renderchunk);
+            }
+        }
 
-                if (i < 0L)
+        if (this.chunksToResortTransparency.size() > 0)
+        {
+            Iterator iterator2 = this.chunksToResortTransparency.iterator();
+
+            if (iterator2.hasNext())
+            {
+                RenderChunk renderchunk2 = (RenderChunk)iterator2.next();
+
+                if (this.field_174995_M.func_178509_c(renderchunk2))
                 {
+                    iterator2.remove();
+                }
+            }
+        }
+
+        double d1 = 0.0D;
+        int i = Config.getUpdatesPerFrame();
+
+        if (!this.field_175009_l.isEmpty())
+        {
+            Iterator<RenderChunk> iterator1 = this.field_175009_l.iterator();
+
+            while (iterator1.hasNext())
+            {
+                RenderChunk renderchunk1 = (RenderChunk)iterator1.next();
+                boolean flag = renderchunk1.isChunkRegionEmpty();
+                boolean flag1;
+
+                if (flag)
+                {
+                    flag1 = this.field_174995_M.func_178505_b(renderchunk1);
+                }
+                else
+                {
+                    flag1 = this.field_174995_M.func_178507_a(renderchunk1);
+                }
+
+                if (!flag1)
+                {
                     break;
                 }
+
+                renderchunk1.func_178575_a(false);
+                iterator1.remove();
+
+                if (!flag)
+                {
+                    double d0 = 2.0D * RenderChunkUtils.getRelativeBufferSize(renderchunk1);
+                    d1 += d0;
+
+                    if (d1 > (double)i)
+                    {
+                        break;
+                    }
+                }
             }
         }
     }
@@ -1742,6 +2575,7 @@
             GlStateManager.func_179136_a(0.0F, 0.0F);
             GlStateManager.func_179113_r();
             GlStateManager.func_179141_d();
+            GlStateManager.func_179120_a(770, 771, 1, 0);
             GlStateManager.func_179084_k();
             GlStateManager.func_179121_F();
             GlStateManager.func_179132_a(true);
@@ -1753,11 +2587,16 @@
         GlStateManager.func_179120_a(774, 768, 1, 0);
         GlStateManager.func_179147_l();
         GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 0.5F);
-        GlStateManager.func_179136_a(-3.0F, -3.0F);
+        GlStateManager.func_179136_a(-1.0F, -10.0F);
         GlStateManager.func_179088_q();
         GlStateManager.func_179092_a(516, 0.1F);
         GlStateManager.func_179141_d();
         GlStateManager.func_179094_E();
+
+        if (Config.isShaders())
+        {
+            ShadersRender.beginBlockDamage();
+        }
     }
 
     private void func_174969_t()
@@ -1768,6 +2607,11 @@
         GlStateManager.func_179141_d();
         GlStateManager.func_179132_a(true);
         GlStateManager.func_179121_F();
+
+        if (Config.isShaders())
+        {
+            ShadersRender.endBlockDamage();
+        }
     }
 
     public void func_174981_a(Tessellator p_174981_1_, WorldRenderer p_174981_2_, Entity p_174981_3_, float p_174981_4_)
@@ -1782,7 +2626,7 @@
             this.func_180443_s();
             p_174981_2_.func_181668_a(7, DefaultVertexFormats.field_176600_a);
             p_174981_2_.func_178969_c(-d0, -d1, -d2);
-            p_174981_2_.func_78914_f();
+            p_174981_2_.markDirty();
             Iterator<DestroyBlockProgress> iterator = this.field_72738_E.values().iterator();
 
             while (iterator.hasNext())
@@ -1794,8 +2638,52 @@
                 double d5 = (double)blockpos.func_177952_p() - d2;
                 Block block = this.field_72769_h.func_180495_p(blockpos).func_177230_c();
 
-                if (!(block instanceof BlockChest) && !(block instanceof BlockEnderChest) && !(block instanceof BlockSign) && !(block instanceof BlockSkull))
+                //TODO: Falcun patcher
+                if(block != null) {
+                	if(FPSPage.BLOCKS.contains(block.getClass())) {
+	                	continue;
+	                }
+                }
+                
+                if (Wrapper.getInstance().isNoFoliage()) {
+	                if (block instanceof BlockDoublePlant) {
+	                	continue;
+	                }
+	                
+	                if (block instanceof BlockFlower) {
+	                	continue;
+	                }
+	                
+	                if (block instanceof BlockTallGrass) {
+	                	continue;
+	                }
+                }
+                
+                boolean flag;
+
+                if (Reflector.ForgeTileEntity_canRenderBreaking.exists())
                 {
+                    boolean flag1 = block instanceof BlockChest || block instanceof BlockEnderChest || block instanceof BlockSign || block instanceof BlockSkull;
+
+                    if (!flag1)
+                    {
+                        TileEntity tileentity = this.field_72769_h.func_175625_s(blockpos);
+
+                        if (tileentity != null)
+                        {
+                            flag1 = Reflector.callBoolean(tileentity, Reflector.ForgeTileEntity_canRenderBreaking, new Object[0]);
+                        }
+                    }
+
+                    flag = !flag1;
+                }
+                else
+                {
+                    flag = !(block instanceof BlockChest) && !(block instanceof BlockEnderChest) && !(block instanceof BlockSign) && !(block instanceof BlockSkull);
+                }
+
+                if (flag)
+                {
                     if (d3 * d3 + d4 * d4 + d5 * d5 > 1024.0D)
                     {
                         iterator.remove();
@@ -1821,6 +2709,9 @@
         }
     }
 
+    /**
+     * Draws the selection box for the player. Args: entityPlayer, rayTraceHit, i, itemStack, partialTickTime
+     */
     public void func_72731_b(EntityPlayer p_72731_1_, MovingObjectPosition p_72731_2_, int p_72731_3_, float p_72731_4_)
     {
         if (p_72731_3_ == 0 && p_72731_2_.field_72313_a == MovingObjectPosition.MovingObjectType.BLOCK)
@@ -1830,6 +2721,12 @@
             GlStateManager.func_179131_c(0.0F, 0.0F, 0.0F, 0.4F);
             GL11.glLineWidth(2.0F);
             GlStateManager.func_179090_x();
+
+            if (Config.isShaders())
+            {
+                Shaders.disableTexture2D();
+            }
+
             GlStateManager.func_179132_a(false);
             float f = 0.002F;
             BlockPos blockpos = p_72731_2_.func_178782_a();
@@ -1841,11 +2738,25 @@
                 double d0 = p_72731_1_.field_70142_S + (p_72731_1_.field_70165_t - p_72731_1_.field_70142_S) * (double)p_72731_4_;
                 double d1 = p_72731_1_.field_70137_T + (p_72731_1_.field_70163_u - p_72731_1_.field_70137_T) * (double)p_72731_4_;
                 double d2 = p_72731_1_.field_70136_U + (p_72731_1_.field_70161_v - p_72731_1_.field_70136_U) * (double)p_72731_4_;
-                func_181561_a(block.func_180646_a(this.field_72769_h, blockpos).func_72314_b(0.0020000000949949026D, 0.0020000000949949026D, 0.0020000000949949026D).func_72317_d(-d0, -d1, -d2));
+                AxisAlignedBB axisalignedbb = block.func_180646_a(this.field_72769_h, blockpos);
+                Block.EnumOffsetType block$enumoffsettype = block.func_176218_Q();
+
+                if (block$enumoffsettype != Block.EnumOffsetType.NONE)
+                {
+                    axisalignedbb = BlockModelUtils.getOffsetBoundingBox(axisalignedbb, block$enumoffsettype, blockpos);
+                }
+
+                func_181561_a(axisalignedbb.func_72314_b(0.0020000000949949026D, 0.0020000000949949026D, 0.0020000000949949026D).func_72317_d(-d0, -d1, -d2));
             }
 
             GlStateManager.func_179132_a(true);
             GlStateManager.func_179098_w();
+
+            if (Config.isShaders())
+            {
+                Shaders.enableTexture2D();
+            }
+
             GlStateManager.func_179084_k();
         }
     }
@@ -1910,6 +2821,9 @@
         tessellator.func_78381_a();
     }
 
+    /**
+     * Marks the blocks in the given range for update
+     */
     private void func_72725_b(int p_72725_1_, int p_72725_2_, int p_72725_3_, int p_72725_4_, int p_72725_5_, int p_72725_6_)
     {
         this.field_175008_n.func_178162_a(p_72725_1_, p_72725_2_, p_72725_3_, p_72725_4_, p_72725_5_, p_72725_6_);
@@ -1931,6 +2845,10 @@
         this.func_72725_b(i - 1, j - 1, k - 1, i + 1, j + 1, k + 1);
     }
 
+    /**
+     * On the client, re-renders all blocks in this range, inclusive. On the server, does nothing. Args: min x, min y,
+     * min z, max x, max y, max z
+     */
     public void func_147585_a(int p_147585_1_, int p_147585_2_, int p_147585_3_, int p_147585_4_, int p_147585_5_, int p_147585_6_)
     {
         this.func_72725_b(p_147585_1_ - 1, p_147585_2_ - 1, p_147585_3_ - 1, p_147585_4_ + 1, p_147585_5_ + 1, p_147585_6_ + 1);
@@ -1961,10 +2879,16 @@
         }
     }
 
+    /**
+     * Plays the specified sound. Arg: soundName, x, y, z, volume, pitch
+     */
     public void func_72704_a(String p_72704_1_, double p_72704_2_, double p_72704_4_, double p_72704_6_, float p_72704_8_, float p_72704_9_)
     {
     }
 
+    /**
+     * Plays sound to all near players except the player reference given
+     */
     public void func_85102_a(EntityPlayer p_85102_1_, String p_85102_2_, double p_85102_3_, double p_85102_5_, double p_85102_7_, float p_85102_9_, float p_85102_10_)
     {
     }
@@ -2017,14 +2941,133 @@
             double d1 = this.field_72777_q.func_175606_aa().field_70163_u - p_174974_5_;
             double d2 = this.field_72777_q.func_175606_aa().field_70161_v - p_174974_7_;
 
-            if (p_174974_2_)
+            if (p_174974_1_ == EnumParticleTypes.EXPLOSION_HUGE.func_179348_c() && !Config.isAnimatedExplosion())
             {
-                return this.field_72777_q.field_71452_i.func_178927_a(p_174974_1_, p_174974_3_, p_174974_5_, p_174974_7_, p_174974_9_, p_174974_11_, p_174974_13_, p_174974_15_);
+                return null;
             }
+            else if (p_174974_1_ == EnumParticleTypes.EXPLOSION_LARGE.func_179348_c() && !Config.isAnimatedExplosion())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.EXPLOSION_NORMAL.func_179348_c() && !Config.isAnimatedExplosion())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.SUSPENDED.func_179348_c() && !Config.isWaterParticles())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.SUSPENDED_DEPTH.func_179348_c() && !Config.isVoidParticles())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.SMOKE_NORMAL.func_179348_c() && !Config.isAnimatedSmoke())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.SMOKE_LARGE.func_179348_c() && !Config.isAnimatedSmoke())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.SPELL_MOB.func_179348_c() && !Config.isPotionParticles())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.SPELL_MOB_AMBIENT.func_179348_c() && !Config.isPotionParticles())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.SPELL.func_179348_c() && !Config.isPotionParticles())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.SPELL_INSTANT.func_179348_c() && !Config.isPotionParticles())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.SPELL_WITCH.func_179348_c() && !Config.isPotionParticles())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.PORTAL.func_179348_c() && !Config.isPortalParticles())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.FLAME.func_179348_c() && !Config.isAnimatedFlame())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.REDSTONE.func_179348_c() && !Config.isAnimatedRedstone())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.DRIP_WATER.func_179348_c() && !Config.isDrippingWaterLava())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.DRIP_LAVA.func_179348_c() && !Config.isDrippingWaterLava())
+            {
+                return null;
+            }
+            else if (p_174974_1_ == EnumParticleTypes.FIREWORKS_SPARK.func_179348_c() && !Config.isFireworkParticles())
+            {
+                return null;
+            }
             else
             {
-                double d3 = 16.0D;
-                return d0 * d0 + d1 * d1 + d2 * d2 > 256.0D ? null : (i > 1 ? null : this.field_72777_q.field_71452_i.func_178927_a(p_174974_1_, p_174974_3_, p_174974_5_, p_174974_7_, p_174974_9_, p_174974_11_, p_174974_13_, p_174974_15_));
+                if (!p_174974_2_)
+                {
+                    double d3 = 1024.0D;
+
+                    if (p_174974_1_ == EnumParticleTypes.CRIT.func_179348_c())
+                    {
+                        d3 = 38416.0D;
+                    }
+
+                    if (d0 * d0 + d1 * d1 + d2 * d2 > d3)
+                    {
+                        return null;
+                    }
+
+                    if (i > 1)
+                    {
+                        return null;
+                    }
+                }
+
+                EntityFX entityfx = this.field_72777_q.field_71452_i.func_178927_a(p_174974_1_, p_174974_3_, p_174974_5_, p_174974_7_, p_174974_9_, p_174974_11_, p_174974_13_, p_174974_15_);
+
+                if (p_174974_1_ == EnumParticleTypes.WATER_BUBBLE.func_179348_c())
+                {
+                    CustomColors.updateWaterFX(entityfx, this.field_72769_h, p_174974_3_, p_174974_5_, p_174974_7_, this.renderEnv);
+                }
+
+                if (p_174974_1_ == EnumParticleTypes.WATER_SPLASH.func_179348_c())
+                {
+                    CustomColors.updateWaterFX(entityfx, this.field_72769_h, p_174974_3_, p_174974_5_, p_174974_7_, this.renderEnv);
+                }
+
+                if (p_174974_1_ == EnumParticleTypes.WATER_DROP.func_179348_c())
+                {
+                    CustomColors.updateWaterFX(entityfx, this.field_72769_h, p_174974_3_, p_174974_5_, p_174974_7_, this.renderEnv);
+                }
+
+                if (p_174974_1_ == EnumParticleTypes.TOWN_AURA.func_179348_c())
+                {
+                    CustomColors.updateMyceliumFX(entityfx);
+                }
+
+                if (p_174974_1_ == EnumParticleTypes.PORTAL.func_179348_c())
+                {
+                    CustomColors.updatePortalFX(entityfx);
+                }
+
+                if (p_174974_1_ == EnumParticleTypes.REDSTONE.func_179348_c())
+                {
+                    CustomColors.updateReddustFX(entityfx, this.field_72769_h, p_174974_3_, p_174974_5_, p_174974_7_);
+                }
+
+                return entityfx;
             }
         }
         else
@@ -2033,14 +3076,37 @@
         }
     }
 
+    /**
+     * Called on all IWorldAccesses when an entity is created or loaded. On client worlds, starts downloading any
+     * necessary textures. On server worlds, adds the entity to the entity tracker.
+     */
     public void func_72703_a(Entity p_72703_1_)
     {
+        RandomEntities.entityLoaded(p_72703_1_, this.field_72769_h);
+
+        if (Config.isDynamicLights())
+        {
+            DynamicLights.entityAdded(p_72703_1_, this);
+        }
     }
 
+    /**
+     * Called on all IWorldAccesses when an entity is unloaded or destroyed. On client worlds, releases any downloaded
+     * textures. On server worlds, removes the entity from the entity tracker.
+     */
     public void func_72709_b(Entity p_72709_1_)
     {
+        RandomEntities.entityUnloaded(p_72709_1_, this.field_72769_h);
+
+        if (Config.isDynamicLights())
+        {
+            DynamicLights.entityRemoved(p_72709_1_, this);
+        }
     }
 
+    /**
+     * Deletes all display lists
+     */
     public void func_72728_f()
     {
     }
@@ -2051,7 +3117,6 @@
         {
             case 1013:
             case 1018:
-
                 if (this.field_72777_q.func_175606_aa() != null)
                 {
                     double d0 = (double)p_180440_2_.func_177958_n() - this.field_72777_q.func_175606_aa().field_70165_t;
@@ -2092,20 +3157,24 @@
             case 1000:
                 this.field_72769_h.func_175731_a(p_180439_3_, "random.click", 1.0F, 1.0F, false);
                 break;
+
             case 1001:
                 this.field_72769_h.func_175731_a(p_180439_3_, "random.click", 1.0F, 1.2F, false);
                 break;
+
             case 1002:
                 this.field_72769_h.func_175731_a(p_180439_3_, "random.bow", 1.0F, 1.2F, false);
                 break;
+
             case 1003:
                 this.field_72769_h.func_175731_a(p_180439_3_, "random.door_open", 1.0F, this.field_72769_h.field_73012_v.nextFloat() * 0.1F + 0.9F, false);
                 break;
+
             case 1004:
                 this.field_72769_h.func_175731_a(p_180439_3_, "random.fizz", 0.5F, 2.6F + (random.nextFloat() - random.nextFloat()) * 0.8F, false);
                 break;
-            case 1005:
 
+            case 1005:
                 if (Item.func_150899_d(p_180439_4_) instanceof ItemRecord)
                 {
                     this.field_72769_h.func_175717_a(p_180439_3_, "records." + ((ItemRecord)Item.func_150899_d(p_180439_4_)).field_150929_a);
@@ -2116,68 +3185,84 @@
                 }
 
                 break;
+
             case 1006:
                 this.field_72769_h.func_175731_a(p_180439_3_, "random.door_close", 1.0F, this.field_72769_h.field_73012_v.nextFloat() * 0.1F + 0.9F, false);
                 break;
+
             case 1007:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.ghast.charge", 10.0F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1008:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.ghast.fireball", 10.0F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1009:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.ghast.fireball", 2.0F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1010:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.wood", 2.0F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1011:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.metal", 2.0F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1012:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.woodbreak", 2.0F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1014:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.wither.shoot", 2.0F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1015:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.bat.takeoff", 0.05F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1016:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.infect", 2.0F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1017:
                 this.field_72769_h.func_175731_a(p_180439_3_, "mob.zombie.unfect", 2.0F, (random.nextFloat() - random.nextFloat()) * 0.2F + 1.0F, false);
                 break;
+
             case 1020:
                 this.field_72769_h.func_175731_a(p_180439_3_, "random.anvil_break", 1.0F, this.field_72769_h.field_73012_v.nextFloat() * 0.1F + 0.9F, false);
                 break;
+
             case 1021:
                 this.field_72769_h.func_175731_a(p_180439_3_, "random.anvil_use", 1.0F, this.field_72769_h.field_73012_v.nextFloat() * 0.1F + 0.9F, false);
                 break;
+
             case 1022:
                 this.field_72769_h.func_175731_a(p_180439_3_, "random.anvil_land", 0.3F, this.field_72769_h.field_73012_v.nextFloat() * 0.1F + 0.9F, false);
                 break;
+
             case 2000:
-                int l = p_180439_4_ % 3 - 1;
-                int i = p_180439_4_ / 3 % 3 - 1;
-                double d15 = (double)p_180439_3_.func_177958_n() + (double)l * 0.6D + 0.5D;
-                double d17 = (double)p_180439_3_.func_177956_o() + 0.5D;
-                double d19 = (double)p_180439_3_.func_177952_p() + (double)i * 0.6D + 0.5D;
+                int i = p_180439_4_ % 3 - 1;
+                int j = p_180439_4_ / 3 % 3 - 1;
+                double d0 = (double)p_180439_3_.func_177958_n() + (double)i * 0.6D + 0.5D;
+                double d1 = (double)p_180439_3_.func_177956_o() + 0.5D;
+                double d2 = (double)p_180439_3_.func_177952_p() + (double)j * 0.6D + 0.5D;
 
-                for (int k1 = 0; k1 < 10; ++k1)
+                for (int i1 = 0; i1 < 10; ++i1)
                 {
-                    double d20 = random.nextDouble() * 0.2D + 0.01D;
-                    double d21 = d15 + (double)l * 0.01D + (random.nextDouble() - 0.5D) * (double)i * 0.5D;
-                    double d4 = d17 + (random.nextDouble() - 0.5D) * 0.5D;
-                    double d6 = d19 + (double)i * 0.01D + (random.nextDouble() - 0.5D) * (double)l * 0.5D;
-                    double d8 = (double)l * d20 + random.nextGaussian() * 0.01D;
-                    double d10 = -0.03D + random.nextGaussian() * 0.01D;
-                    double d12 = (double)i * d20 + random.nextGaussian() * 0.01D;
-                    this.func_174972_a(EnumParticleTypes.SMOKE_NORMAL, d21, d4, d6, d8, d10, d12, new int[0]);
+                    double d15 = random.nextDouble() * 0.2D + 0.01D;
+                    double d16 = d0 + (double)i * 0.01D + (random.nextDouble() - 0.5D) * (double)j * 0.5D;
+                    double d17 = d1 + (random.nextDouble() - 0.5D) * 0.5D;
+                    double d18 = d2 + (double)j * 0.01D + (random.nextDouble() - 0.5D) * (double)i * 0.5D;
+                    double d19 = (double)i * d15 + random.nextGaussian() * 0.01D;
+                    double d20 = -0.03D + random.nextGaussian() * 0.01D;
+                    double d21 = (double)j * d15 + random.nextGaussian() * 0.01D;
+                    this.func_174972_a(EnumParticleTypes.SMOKE_NORMAL, d16, d17, d18, d19, d20, d21, new int[0]);
                 }
 
                 return;
+
             case 2001:
                 Block block = Block.func_149729_e(p_180439_4_ & 4095);
 
@@ -2188,14 +3273,15 @@
 
                 this.field_72777_q.field_71452_i.func_180533_a(p_180439_3_, block.func_176203_a(p_180439_4_ >> 12 & 255));
                 break;
+
             case 2002:
-                double d13 = (double)p_180439_3_.func_177958_n();
-                double d14 = (double)p_180439_3_.func_177956_o();
-                double d16 = (double)p_180439_3_.func_177952_p();
+                double d3 = (double)p_180439_3_.func_177958_n();
+                double d4 = (double)p_180439_3_.func_177956_o();
+                double d5 = (double)p_180439_3_.func_177952_p();
 
-                for (int i1 = 0; i1 < 8; ++i1)
+                for (int k = 0; k < 8; ++k)
                 {
-                    this.func_174972_a(EnumParticleTypes.ITEM_CRACK, d13, d14, d16, random.nextGaussian() * 0.15D, random.nextDouble() * 0.2D, random.nextGaussian() * 0.15D, new int[] {Item.func_150891_b(Items.field_151068_bn), p_180439_4_});
+                    this.func_174972_a(EnumParticleTypes.ITEM_CRACK, d3, d4, d5, random.nextGaussian() * 0.15D, random.nextDouble() * 0.2D, random.nextGaussian() * 0.15D, new int[] {Item.func_150891_b(Items.field_151068_bn), p_180439_4_});
                 }
 
                 int j1 = Items.field_151068_bn.func_77620_a(p_180439_4_);
@@ -2209,54 +3295,56 @@
                     enumparticletypes = EnumParticleTypes.SPELL_INSTANT;
                 }
 
-                for (int l1 = 0; l1 < 100; ++l1)
+                for (int k1 = 0; k1 < 100; ++k1)
                 {
-                    double d22 = random.nextDouble() * 4.0D;
-                    double d23 = random.nextDouble() * Math.PI * 2.0D;
-                    double d24 = Math.cos(d23) * d22;
-                    double d9 = 0.01D + random.nextDouble() * 0.5D;
-                    double d11 = Math.sin(d23) * d22;
-                    EntityFX entityfx = this.func_174974_b(enumparticletypes.func_179348_c(), enumparticletypes.func_179344_e(), d13 + d24 * 0.1D, d14 + 0.3D, d16 + d11 * 0.1D, d24, d9, d11, new int[0]);
+                    double d7 = random.nextDouble() * 4.0D;
+                    double d9 = random.nextDouble() * Math.PI * 2.0D;
+                    double d11 = Math.cos(d9) * d7;
+                    double d23 = 0.01D + random.nextDouble() * 0.5D;
+                    double d24 = Math.sin(d9) * d7;
+                    EntityFX entityfx = this.func_174974_b(enumparticletypes.func_179348_c(), enumparticletypes.func_179344_e(), d3 + d11 * 0.1D, d4 + 0.3D, d5 + d24 * 0.1D, d11, d23, d24, new int[0]);
 
                     if (entityfx != null)
                     {
                         float f3 = 0.75F + random.nextFloat() * 0.25F;
                         entityfx.func_70538_b(f * f3, f1 * f3, f2 * f3);
-                        entityfx.func_70543_e((float)d22);
+                        entityfx.func_70543_e((float)d7);
                     }
                 }
 
                 this.field_72769_h.func_175731_a(p_180439_3_, "game.potion.smash", 1.0F, this.field_72769_h.field_73012_v.nextFloat() * 0.1F + 0.9F, false);
                 break;
+
             case 2003:
-                double d0 = (double)p_180439_3_.func_177958_n() + 0.5D;
-                double d1 = (double)p_180439_3_.func_177956_o();
-                double d2 = (double)p_180439_3_.func_177952_p() + 0.5D;
+                double d6 = (double)p_180439_3_.func_177958_n() + 0.5D;
+                double d8 = (double)p_180439_3_.func_177956_o();
+                double d10 = (double)p_180439_3_.func_177952_p() + 0.5D;
 
-                for (int j = 0; j < 8; ++j)
+                for (int l1 = 0; l1 < 8; ++l1)
                 {
-                    this.func_174972_a(EnumParticleTypes.ITEM_CRACK, d0, d1, d2, random.nextGaussian() * 0.15D, random.nextDouble() * 0.2D, random.nextGaussian() * 0.15D, new int[] {Item.func_150891_b(Items.field_151061_bv)});
+                    this.func_174972_a(EnumParticleTypes.ITEM_CRACK, d6, d8, d10, random.nextGaussian() * 0.15D, random.nextDouble() * 0.2D, random.nextGaussian() * 0.15D, new int[] {Item.func_150891_b(Items.field_151061_bv)});
                 }
 
-                for (double d18 = 0.0D; d18 < (Math.PI * 2D); d18 += 0.15707963267948966D)
+                for (double d22 = 0.0D; d22 < (Math.PI * 2D); d22 += 0.15707963267948966D)
                 {
-                    this.func_174972_a(EnumParticleTypes.PORTAL, d0 + Math.cos(d18) * 5.0D, d1 - 0.4D, d2 + Math.sin(d18) * 5.0D, Math.cos(d18) * -5.0D, 0.0D, Math.sin(d18) * -5.0D, new int[0]);
-                    this.func_174972_a(EnumParticleTypes.PORTAL, d0 + Math.cos(d18) * 5.0D, d1 - 0.4D, d2 + Math.sin(d18) * 5.0D, Math.cos(d18) * -7.0D, 0.0D, Math.sin(d18) * -7.0D, new int[0]);
+                    this.func_174972_a(EnumParticleTypes.PORTAL, d6 + Math.cos(d22) * 5.0D, d8 - 0.4D, d10 + Math.sin(d22) * 5.0D, Math.cos(d22) * -5.0D, 0.0D, Math.sin(d22) * -5.0D, new int[0]);
+                    this.func_174972_a(EnumParticleTypes.PORTAL, d6 + Math.cos(d22) * 5.0D, d8 - 0.4D, d10 + Math.sin(d22) * 5.0D, Math.cos(d22) * -7.0D, 0.0D, Math.sin(d22) * -7.0D, new int[0]);
                 }
 
                 return;
-            case 2004:
 
-                for (int k = 0; k < 20; ++k)
+            case 2004:
+                for (int l = 0; l < 20; ++l)
                 {
-                    double d3 = (double)p_180439_3_.func_177958_n() + 0.5D + ((double)this.field_72769_h.field_73012_v.nextFloat() - 0.5D) * 2.0D;
-                    double d5 = (double)p_180439_3_.func_177956_o() + 0.5D + ((double)this.field_72769_h.field_73012_v.nextFloat() - 0.5D) * 2.0D;
-                    double d7 = (double)p_180439_3_.func_177952_p() + 0.5D + ((double)this.field_72769_h.field_73012_v.nextFloat() - 0.5D) * 2.0D;
-                    this.field_72769_h.func_175688_a(EnumParticleTypes.SMOKE_NORMAL, d3, d5, d7, 0.0D, 0.0D, 0.0D, new int[0]);
-                    this.field_72769_h.func_175688_a(EnumParticleTypes.FLAME, d3, d5, d7, 0.0D, 0.0D, 0.0D, new int[0]);
+                    double d12 = (double)p_180439_3_.func_177958_n() + 0.5D + ((double)this.field_72769_h.field_73012_v.nextFloat() - 0.5D) * 2.0D;
+                    double d13 = (double)p_180439_3_.func_177956_o() + 0.5D + ((double)this.field_72769_h.field_73012_v.nextFloat() - 0.5D) * 2.0D;
+                    double d14 = (double)p_180439_3_.func_177952_p() + 0.5D + ((double)this.field_72769_h.field_73012_v.nextFloat() - 0.5D) * 2.0D;
+                    this.field_72769_h.func_175688_a(EnumParticleTypes.SMOKE_NORMAL, d12, d13, d14, 0.0D, 0.0D, 0.0D, new int[0]);
+                    this.field_72769_h.func_175688_a(EnumParticleTypes.FLAME, d12, d13, d14, 0.0D, 0.0D, 0.0D, new int[0]);
                 }
 
                 return;
+
             case 2005:
                 ItemDye.func_180617_a(this.field_72769_h, p_180439_3_, p_180439_4_);
         }
@@ -2288,6 +3376,119 @@
         this.field_147595_R = true;
     }
 
+    public boolean hasNoChunkUpdates()
+    {
+        return this.field_175009_l.isEmpty() && this.field_174995_M.hasChunkUpdates();
+    }
+
+    public void resetClouds()
+    {
+        this.cloudRenderer.reset();
+    }
+
+    public int getCountRenderers()
+    {
+        return this.field_175008_n.field_178164_f.length;
+    }
+
+    public int getCountActiveRenderers()
+    {
+        return this.field_72755_R.size();
+    }
+
+    public int getCountEntitiesRendered()
+    {
+        return this.field_72749_I;
+    }
+
+    public int getCountTileEntitiesRendered()
+    {
+        return this.countTileEntitiesRendered;
+    }
+
+    public int getCountLoadedChunks()
+    {
+        if (this.field_72769_h == null)
+        {
+            return 0;
+        }
+        else
+        {
+            IChunkProvider ichunkprovider = this.field_72769_h.func_72863_F();
+
+            if (ichunkprovider == null)
+            {
+                return 0;
+            }
+            else
+            {
+                if (ichunkprovider != this.worldChunkProvider)
+                {
+                    this.worldChunkProvider = ichunkprovider;
+                    this.worldChunkProviderMap = (LongHashMap)Reflector.getFieldValue(ichunkprovider, Reflector.ChunkProviderClient_chunkMapping);
+                }
+
+                return this.worldChunkProviderMap == null ? 0 : this.worldChunkProviderMap.func_76162_a();
+            }
+        }
+    }
+
+    public int getCountChunksToUpdate()
+    {
+        return this.field_175009_l.size();
+    }
+
+    public RenderChunk getRenderChunk(BlockPos p_getRenderChunk_1_)
+    {
+        return this.field_175008_n.func_178161_a(p_getRenderChunk_1_);
+    }
+
+    public WorldClient getWorld()
+    {
+        return this.field_72769_h;
+    }
+
+    private void clearRenderInfos()
+    {
+        if (renderEntitiesCounter > 0)
+        {
+            this.field_72755_R = new ArrayList(this.field_72755_R.size() + 16);
+            this.renderInfosEntities = new ArrayList(this.renderInfosEntities.size() + 16);
+            this.renderInfosTileEntities = new ArrayList(this.renderInfosTileEntities.size() + 16);
+        }
+        else
+        {
+            this.field_72755_R.clear();
+            this.renderInfosEntities.clear();
+            this.renderInfosTileEntities.clear();
+        }
+    }
+
+    public void onPlayerPositionSet()
+    {
+        if (this.firstWorldLoad)
+        {
+            this.func_72712_a();
+            this.firstWorldLoad = false;
+        }
+    }
+
+    public void pauseChunkUpdates()
+    {
+        if (this.field_174995_M != null)
+        {
+            //this.renderDispatcher.pauseChunkUpdates();
+        }
+    }
+
+    public void resumeChunkUpdates()
+    {
+        if (this.field_174995_M != null)
+        {
+            //this.renderDispatcher.resumeChunkUpdates();
+        }
+    }
+
     public void func_181023_a(Collection<TileEntity> p_181023_1_, Collection<TileEntity> p_181023_2_)
     {
         synchronized (this.field_181024_n)
@@ -2297,20 +3498,33 @@
         }
     }
 
-    @SideOnly(Side.CLIENT)
-    class ContainerLocalRenderInformation
+    public static class ContainerLocalRenderInformation
     {
         final RenderChunk field_178036_a;
-        final EnumFacing field_178034_b;
-        final Set<EnumFacing> field_178035_c;
-        final int field_178032_d;
+        EnumFacing field_178034_b;
+        int field_178035_c;
 
-        private ContainerLocalRenderInformation(RenderChunk p_i46248_2_, EnumFacing p_i46248_3_, int p_i46248_4_)
+        public ContainerLocalRenderInformation(RenderChunk p_i46248_2_, EnumFacing p_i46248_3_, int p_i46248_4_)
         {
-            this.field_178035_c = EnumSet.<EnumFacing>noneOf(EnumFacing.class);
             this.field_178036_a = p_i46248_2_;
             this.field_178034_b = p_i46248_3_;
-            this.field_178032_d = p_i46248_4_;
+            this.field_178035_c = p_i46248_4_;
         }
+
+        public void setFacingBit(byte p_setFacingBit_1_, EnumFacing p_setFacingBit_2_)
+        {
+            this.field_178035_c = this.field_178035_c | p_setFacingBit_1_ | 1 << p_setFacingBit_2_.ordinal();
+        }
+
+        public boolean isFacingBit(EnumFacing p_isFacingBit_1_)
+        {
+            return (this.field_178035_c & 1 << p_isFacingBit_1_.ordinal()) > 0;
+        }
+
+        private void initialize(EnumFacing p_initialize_1_, int p_initialize_2_)
+        {
+            this.field_178034_b = p_initialize_1_;
+            this.field_178035_c = p_initialize_2_;
+        }
     }
 }
