--- ../src-base/minecraft/net/minecraft/client/renderer/entity/layers/LayerCape.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/layers/LayerCape.java
@@ -1,14 +1,9 @@
 package net.minecraft.client.renderer.entity.layers;
 
+import net.mattbenson.cosmetics.cape.CapeManager;
 import net.minecraft.client.entity.AbstractClientPlayer;
-import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.entity.RenderPlayer;
-import net.minecraft.entity.player.EnumPlayerModelParts;
-import net.minecraft.util.MathHelper;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-@SideOnly(Side.CLIENT)
 public class LayerCape implements LayerRenderer<AbstractClientPlayer>
 {
     private final RenderPlayer field_177167_a;
@@ -20,20 +15,22 @@
 
     public void func_177141_a(AbstractClientPlayer p_177141_1_, float p_177141_2_, float p_177141_3_, float p_177141_4_, float p_177141_5_, float p_177141_6_, float p_177141_7_, float p_177141_8_)
     {
-        if (p_177141_1_.func_152122_n() && !p_177141_1_.func_82150_aj() && p_177141_1_.func_175148_a(EnumPlayerModelParts.CAPE) && p_177141_1_.func_110303_q() != null)
+    	CapeManager.renderCape(field_177167_a, p_177141_1_, p_177141_2_, p_177141_3_, p_177141_4_, p_177141_5_, p_177141_6_, p_177141_7_, p_177141_8_);
+    	/*
+        if (entitylivingbaseIn.hasPlayerInfo() && !entitylivingbaseIn.isInvisible() && entitylivingbaseIn.isWearing(EnumPlayerModelParts.CAPE) && entitylivingbaseIn.getLocationCape() != null)
         {
-            GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
-            this.field_177167_a.func_110776_a(p_177141_1_.func_110303_q());
-            GlStateManager.func_179094_E();
-            GlStateManager.func_179109_b(0.0F, 0.0F, 0.125F);
-            double d0 = p_177141_1_.field_71091_bM + (p_177141_1_.field_71094_bP - p_177141_1_.field_71091_bM) * (double)p_177141_4_ - (p_177141_1_.field_70169_q + (p_177141_1_.field_70165_t - p_177141_1_.field_70169_q) * (double)p_177141_4_);
-            double d1 = p_177141_1_.field_71096_bN + (p_177141_1_.field_71095_bQ - p_177141_1_.field_71096_bN) * (double)p_177141_4_ - (p_177141_1_.field_70167_r + (p_177141_1_.field_70163_u - p_177141_1_.field_70167_r) * (double)p_177141_4_);
-            double d2 = p_177141_1_.field_71097_bO + (p_177141_1_.field_71085_bR - p_177141_1_.field_71097_bO) * (double)p_177141_4_ - (p_177141_1_.field_70166_s + (p_177141_1_.field_70161_v - p_177141_1_.field_70166_s) * (double)p_177141_4_);
-            float f = p_177141_1_.field_70760_ar + (p_177141_1_.field_70761_aq - p_177141_1_.field_70760_ar) * p_177141_4_;
-            double d3 = (double)MathHelper.func_76126_a(f * (float)Math.PI / 180.0F);
-            double d4 = (double)(-MathHelper.func_76134_b(f * (float)Math.PI / 180.0F));
+            GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
+            this.playerRenderer.bindTexture(entitylivingbaseIn.getLocationCape());
+            GlStateManager.pushMatrix();
+            GlStateManager.translate(0.0F, 0.0F, 0.125F);
+            double d0 = entitylivingbaseIn.prevChasingPosX + (entitylivingbaseIn.chasingPosX - entitylivingbaseIn.prevChasingPosX) * (double)partialTicks - (entitylivingbaseIn.prevPosX + (entitylivingbaseIn.posX - entitylivingbaseIn.prevPosX) * (double)partialTicks);
+            double d1 = entitylivingbaseIn.prevChasingPosY + (entitylivingbaseIn.chasingPosY - entitylivingbaseIn.prevChasingPosY) * (double)partialTicks - (entitylivingbaseIn.prevPosY + (entitylivingbaseIn.posY - entitylivingbaseIn.prevPosY) * (double)partialTicks);
+            double d2 = entitylivingbaseIn.prevChasingPosZ + (entitylivingbaseIn.chasingPosZ - entitylivingbaseIn.prevChasingPosZ) * (double)partialTicks - (entitylivingbaseIn.prevPosZ + (entitylivingbaseIn.posZ - entitylivingbaseIn.prevPosZ) * (double)partialTicks);
+            float f = entitylivingbaseIn.prevRenderYawOffset + (entitylivingbaseIn.renderYawOffset - entitylivingbaseIn.prevRenderYawOffset) * partialTicks;
+            double d3 = (double)MathHelper.sin(f * (float)Math.PI / 180.0F);
+            double d4 = (double)(-MathHelper.cos(f * (float)Math.PI / 180.0F));
             float f1 = (float)d1 * 10.0F;
-            f1 = MathHelper.func_76131_a(f1, -6.0F, 32.0F);
+            f1 = MathHelper.clamp_float(f1, -6.0F, 32.0F);
             float f2 = (float)(d0 * d3 + d2 * d4) * 100.0F;
             float f3 = (float)(d0 * d4 - d2 * d3) * 100.0F;
 
@@ -42,21 +39,33 @@
                 f2 = 0.0F;
             }
 
-            float f4 = p_177141_1_.field_71107_bF + (p_177141_1_.field_71109_bG - p_177141_1_.field_71107_bF) * p_177141_4_;
-            f1 = f1 + MathHelper.func_76126_a((p_177141_1_.field_70141_P + (p_177141_1_.field_70140_Q - p_177141_1_.field_70141_P) * p_177141_4_) * 6.0F) * 32.0F * f4;
+            if (f2 > 165.0F)
+            {
+                f2 = 165.0F;
+            }
 
-            if (p_177141_1_.func_70093_af())
+            if (f1 < -5.0F)
             {
+                f1 = -5.0F;
+            }
+
+            float f4 = entitylivingbaseIn.prevCameraYaw + (entitylivingbaseIn.cameraYaw - entitylivingbaseIn.prevCameraYaw) * partialTicks;
+            f1 = f1 + MathHelper.sin((entitylivingbaseIn.prevDistanceWalkedModified + (entitylivingbaseIn.distanceWalkedModified - entitylivingbaseIn.prevDistanceWalkedModified) * partialTicks) * 6.0F) * 32.0F * f4;
+
+            if (entitylivingbaseIn.isSneaking())
+            {
                 f1 += 25.0F;
+                GlStateManager.translate(0.0F, 0.142F, -0.0178F);
             }
 
-            GlStateManager.func_179114_b(6.0F + f2 / 2.0F + f1, 1.0F, 0.0F, 0.0F);
-            GlStateManager.func_179114_b(f3 / 2.0F, 0.0F, 0.0F, 1.0F);
-            GlStateManager.func_179114_b(-f3 / 2.0F, 0.0F, 1.0F, 0.0F);
-            GlStateManager.func_179114_b(180.0F, 0.0F, 1.0F, 0.0F);
-            this.field_177167_a.func_177087_b().func_178728_c(0.0625F);
-            GlStateManager.func_179121_F();
+            GlStateManager.rotate(6.0F + f2 / 2.0F + f1, 1.0F, 0.0F, 0.0F);
+            GlStateManager.rotate(f3 / 2.0F, 0.0F, 0.0F, 1.0F);
+            GlStateManager.rotate(-f3 / 2.0F, 0.0F, 1.0F, 0.0F);
+            GlStateManager.rotate(180.0F, 0.0F, 1.0F, 0.0F);
+            this.playerRenderer.getMainModel().renderCape(0.0625F);
+            GlStateManager.popMatrix();
         }
+        */
     }
 
     public boolean func_177142_b()
