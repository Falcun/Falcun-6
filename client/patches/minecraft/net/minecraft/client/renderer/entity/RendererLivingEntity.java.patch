--- ../src-base/minecraft/net/minecraft/client/renderer/entity/RendererLivingEntity.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/RendererLivingEntity.java
@@ -1,12 +1,17 @@
 package net.minecraft.client.renderer.entity;
 
 import com.google.common.collect.Lists;
+
 import java.nio.FloatBuffer;
 import java.util.List;
+
+import net.mattbenson.Wrapper;
+import net.mattbenson.events.types.render.RenderEntityEvent;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.entity.EntityPlayerSP;
 import net.minecraft.client.gui.FontRenderer;
 import net.minecraft.client.model.ModelBase;
+import net.minecraft.client.model.ModelSpider;
 import net.minecraft.client.renderer.GLAllocation;
 import net.minecraft.client.renderer.GlStateManager;
 import net.minecraft.client.renderer.OpenGlHelper;
@@ -20,34 +25,50 @@
 import net.minecraft.entity.player.EnumPlayerModelParts;
 import net.minecraft.scoreboard.ScorePlayerTeam;
 import net.minecraft.scoreboard.Team;
+import net.minecraft.src.Config;
 import net.minecraft.util.EnumChatFormatting;
 import net.minecraft.util.MathHelper;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
+import net.optifine.EmissiveTextures;
+import net.optifine.entity.model.CustomEntityModels;
+import net.optifine.reflect.Reflector;
+import net.optifine.shaders.Shaders;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.lwjgl.opengl.GL11;
 
-@SideOnly(Side.CLIENT)
 public abstract class RendererLivingEntity<T extends EntityLivingBase> extends Render<T>
 {
     private static final Logger field_147923_a = LogManager.getLogger();
     private static final DynamicTexture field_177096_e = new DynamicTexture(16, 16);
-    protected ModelBase field_77045_g;
+    public ModelBase field_77045_g;
     protected FloatBuffer field_177095_g = GLAllocation.func_74529_h(4);
     protected List<LayerRenderer<T>> field_177097_h = Lists.<LayerRenderer<T>>newArrayList();
     protected boolean field_177098_i = false;
+    public static float NAME_TAG_RANGE = 64.0F;
+    public static float NAME_TAG_RANGE_SNEAK = 32.0F;
+    public EntityLivingBase renderEntity;
+    public float renderLimbSwing;
+    public float renderLimbSwingAmount;
+    public float renderAgeInTicks;
+    public float renderHeadYaw;
+    public float renderHeadPitch;
+    public float renderScaleFactor;
+    public float renderPartialTicks;
+    private boolean renderModelPushMatrix;
+    private boolean renderLayersPushMatrix;
+    public static final boolean animateModelLiving = Boolean.getBoolean("animate.model.living");
 
     public RendererLivingEntity(RenderManager p_i46156_1_, ModelBase p_i46156_2_, float p_i46156_3_)
     {
         super(p_i46156_1_);
         this.field_77045_g = p_i46156_2_;
         this.field_76989_e = p_i46156_3_;
+        this.renderModelPushMatrix = this.field_77045_g instanceof ModelSpider;
     }
 
     public <V extends EntityLivingBase, U extends LayerRenderer<V>> boolean func_177094_a(U p_177094_1_)
     {
-        return this.field_177097_h.add((LayerRenderer<T>)p_177094_1_);
+        return this.field_177097_h.add((LayerRenderer<T>) p_177094_1_);
     }
 
     protected <V extends EntityLivingBase, U extends LayerRenderer<V>> boolean func_177089_b(U p_177089_1_)
@@ -60,6 +81,11 @@
         return this.field_77045_g;
     }
 
+    /**
+     * Returns a rotation angle that is inbetween two other rotation angles. par1 and par2 are the angles between which
+     * to interpolate, par3 is probably a float between 0.0 and 1.0 that tells us where "between" the two angles we are.
+     * Example: par1 = 30, par2 = 50, par3 = 0.5, then return = 40
+     */
     protected float func_77034_a(float p_77034_1_, float p_77034_2_, float p_77034_3_)
     {
         float f;
@@ -81,115 +107,196 @@
     {
     }
 
+    /**
+     * Actually renders the given argument. This is a synthetic bridge method, always casting down its argument and then
+     * handing it off to a worker function which does the actual work. In all probabilty, the class Render is generic
+     * (Render<T extends Entity>) and this method has signature public void doRender(T entity, double d, double d1,
+     * double d2, float f, float f1). But JAD is pre 1.5 so doe
+     *  
+     * @param entityYaw The yaw rotation of the passed entity
+     */
     public void func_76986_a(T p_76986_1_, double p_76986_2_, double p_76986_4_, double p_76986_6_, float p_76986_8_, float p_76986_9_)
     {
-        GlStateManager.func_179094_E();
-        GlStateManager.func_179129_p();
-        this.field_77045_g.field_78095_p = this.func_77040_d(p_76986_1_, p_76986_9_);
-        this.field_77045_g.field_78093_q = p_76986_1_.func_70115_ae();
-        this.field_77045_g.field_78091_s = p_76986_1_.func_70631_g_();
-
-        try
+    	if (!Wrapper.getInstance().post(new RenderEntityEvent(p_76986_1_, this, p_76986_2_, p_76986_4_, p_76986_6_))) {
+    		return;
+    	}
+    	
+        if (!Reflector.RenderLivingEvent_Pre_Constructor.exists() || !Reflector.postForgeBusEvent(Reflector.RenderLivingEvent_Pre_Constructor, new Object[] {p_76986_1_, this, Double.valueOf(p_76986_2_), Double.valueOf(p_76986_4_), Double.valueOf(p_76986_6_)}))
         {
-            float f = this.func_77034_a(p_76986_1_.field_70760_ar, p_76986_1_.field_70761_aq, p_76986_9_);
-            float f1 = this.func_77034_a(p_76986_1_.field_70758_at, p_76986_1_.field_70759_as, p_76986_9_);
-            float f2 = f1 - f;
+            if (animateModelLiving)
+            {
+                p_76986_1_.field_70721_aZ = 1.0F;
+            }
 
-            if (p_76986_1_.func_70115_ae() && p_76986_1_.field_70154_o instanceof EntityLivingBase)
+            GlStateManager.func_179094_E();
+            GlStateManager.func_179129_p();
+            this.field_77045_g.field_78095_p = this.func_77040_d(p_76986_1_, p_76986_9_);
+            this.field_77045_g.field_78093_q = p_76986_1_.func_70115_ae();
+
+            if (Reflector.ForgeEntity_shouldRiderSit.exists())
             {
-                EntityLivingBase entitylivingbase = (EntityLivingBase)p_76986_1_.field_70154_o;
-                f = this.func_77034_a(entitylivingbase.field_70760_ar, entitylivingbase.field_70761_aq, p_76986_9_);
-                f2 = f1 - f;
-                float f3 = MathHelper.func_76142_g(f2);
+                this.field_77045_g.field_78093_q = p_76986_1_.func_70115_ae() && p_76986_1_.field_70154_o != null && Reflector.callBoolean(p_76986_1_.field_70154_o, Reflector.ForgeEntity_shouldRiderSit, new Object[0]);
+            }
 
-                if (f3 < -85.0F)
+            this.field_77045_g.field_78091_s = p_76986_1_.func_70631_g_();
+
+            try
+            {
+                float f = this.func_77034_a(p_76986_1_.field_70760_ar, p_76986_1_.field_70761_aq, p_76986_9_);
+                float f1 = this.func_77034_a(p_76986_1_.field_70758_at, p_76986_1_.field_70759_as, p_76986_9_);
+                float f2 = f1 - f;
+
+                if (this.field_77045_g.field_78093_q && p_76986_1_.field_70154_o instanceof EntityLivingBase)
                 {
-                    f3 = -85.0F;
+                    EntityLivingBase entitylivingbase = (EntityLivingBase)p_76986_1_.field_70154_o;
+                    f = this.func_77034_a(entitylivingbase.field_70760_ar, entitylivingbase.field_70761_aq, p_76986_9_);
+                    f2 = f1 - f;
+                    float f3 = MathHelper.func_76142_g(f2);
+
+                    if (f3 < -85.0F)
+                    {
+                        f3 = -85.0F;
+                    }
+
+                    if (f3 >= 85.0F)
+                    {
+                        f3 = 85.0F;
+                    }
+
+                    f = f1 - f3;
+
+                    if (f3 * f3 > 2500.0F)
+                    {
+                        f += f3 * 0.2F;
+                    }
+
+                    f2 = f1 - f;
                 }
 
-                if (f3 >= 85.0F)
+                float f7 = p_76986_1_.field_70127_C + (p_76986_1_.field_70125_A - p_76986_1_.field_70127_C) * p_76986_9_;
+                this.func_77039_a(p_76986_1_, p_76986_2_, p_76986_4_, p_76986_6_);
+                float f8 = this.func_77044_a(p_76986_1_, p_76986_9_);
+                this.func_77043_a(p_76986_1_, f8, f, p_76986_9_);
+                GlStateManager.func_179091_B();
+                GlStateManager.func_179152_a(-1.0F, -1.0F, 1.0F);
+                this.func_77041_b(p_76986_1_, p_76986_9_);
+                float f4 = 0.0625F;
+                GlStateManager.func_179109_b(0.0F, -1.5078125F, 0.0F);
+                float f5 = p_76986_1_.field_70722_aY + (p_76986_1_.field_70721_aZ - p_76986_1_.field_70722_aY) * p_76986_9_;
+                float f6 = p_76986_1_.field_70754_ba - p_76986_1_.field_70721_aZ * (1.0F - p_76986_9_);
+
+                if (p_76986_1_.func_70631_g_())
                 {
-                    f3 = 85.0F;
+                    f6 *= 3.0F;
                 }
 
-                f = f1 - f3;
+                if (f5 > 1.0F)
+                {
+                    f5 = 1.0F;
+                }
 
-                if (f3 * f3 > 2500.0F)
+                GlStateManager.func_179141_d();
+                this.field_77045_g.func_78086_a(p_76986_1_, f6, f5, p_76986_9_);
+                this.field_77045_g.func_78087_a(f6, f5, f8, f2, f7, 0.0625F, p_76986_1_);
+
+                if (CustomEntityModels.isActive())
                 {
-                    f += f3 * 0.2F;
+                    this.renderEntity = p_76986_1_;
+                    this.renderLimbSwing = f6;
+                    this.renderLimbSwingAmount = f5;
+                    this.renderAgeInTicks = f8;
+                    this.renderHeadYaw = f2;
+                    this.renderHeadPitch = f7;
+                    this.renderScaleFactor = f4;
+                    this.renderPartialTicks = p_76986_9_;
                 }
-            }
 
-            float f7 = p_76986_1_.field_70127_C + (p_76986_1_.field_70125_A - p_76986_1_.field_70127_C) * p_76986_9_;
-            this.func_77039_a(p_76986_1_, p_76986_2_, p_76986_4_, p_76986_6_);
-            float f8 = this.func_77044_a(p_76986_1_, p_76986_9_);
-            this.func_77043_a(p_76986_1_, f8, f, p_76986_9_);
-            GlStateManager.func_179091_B();
-            GlStateManager.func_179152_a(-1.0F, -1.0F, 1.0F);
-            this.func_77041_b(p_76986_1_, p_76986_9_);
-            float f4 = 0.0625F;
-            GlStateManager.func_179109_b(0.0F, -1.5078125F, 0.0F);
-            float f5 = p_76986_1_.field_70722_aY + (p_76986_1_.field_70721_aZ - p_76986_1_.field_70722_aY) * p_76986_9_;
-            float f6 = p_76986_1_.field_70754_ba - p_76986_1_.field_70721_aZ * (1.0F - p_76986_9_);
+                if (this.field_177098_i)
+                {
+                    boolean flag1 = this.func_177088_c(p_76986_1_);
+                    this.func_77036_a(p_76986_1_, f6, f5, f8, f2, f7, 0.0625F);
 
-            if (p_76986_1_.func_70631_g_())
-            {
-                f6 *= 3.0F;
-            }
+                    if (flag1)
+                    {
+                        this.func_180565_e();
+                    }
+                }
+                else
+                {
+                    boolean flag = this.func_177090_c(p_76986_1_, p_76986_9_);
 
-            if (f5 > 1.0F)
-            {
-                f5 = 1.0F;
-            }
+                    if (EmissiveTextures.isActive())
+                    {
+                        EmissiveTextures.beginRender();
+                    }
 
-            GlStateManager.func_179141_d();
-            this.field_77045_g.func_78086_a(p_76986_1_, f6, f5, p_76986_9_);
-            this.field_77045_g.func_78087_a(f6, f5, f8, f2, f7, 0.0625F, p_76986_1_);
+                    if (this.renderModelPushMatrix)
+                    {
+                        GlStateManager.func_179094_E();
+                    }
 
-            if (this.field_177098_i)
-            {
-                boolean flag1 = this.func_177088_c(p_76986_1_);
-                this.func_77036_a(p_76986_1_, f6, f5, f8, f2, f7, 0.0625F);
+                    this.func_77036_a(p_76986_1_, f6, f5, f8, f2, f7, 0.0625F);
 
-                if (flag1)
-                {
-                    this.func_180565_e();
-                }
-            }
-            else
-            {
-                boolean flag = this.func_177090_c(p_76986_1_, p_76986_9_);
-                this.func_77036_a(p_76986_1_, f6, f5, f8, f2, f7, 0.0625F);
+                    if (this.renderModelPushMatrix)
+                    {
+                        GlStateManager.func_179121_F();
+                    }
 
-                if (flag)
-                {
-                    this.func_177091_f();
-                }
+                    if (EmissiveTextures.isActive())
+                    {
+                        if (EmissiveTextures.hasEmissive())
+                        {
+                            this.renderModelPushMatrix = true;
+                            EmissiveTextures.beginRenderEmissive();
+                            GlStateManager.func_179094_E();
+                            this.func_77036_a(p_76986_1_, f6, f5, f8, f2, f7, f4);
+                            GlStateManager.func_179121_F();
+                            EmissiveTextures.endRenderEmissive();
+                        }
 
-                GlStateManager.func_179132_a(true);
+                        EmissiveTextures.endRender();
+                    }
 
-                if (!(p_76986_1_ instanceof EntityPlayer) || !((EntityPlayer)p_76986_1_).func_175149_v())
+                    if (flag)
+                    {
+                        this.func_177091_f();
+                    }
+
+                    GlStateManager.func_179132_a(true);
+
+                    if (!(p_76986_1_ instanceof EntityPlayer) || !((EntityPlayer)p_76986_1_).func_175149_v())
+                    {
+                        this.func_177093_a(p_76986_1_, f6, f5, p_76986_9_, f8, f2, f7, 0.0625F);
+                    }
+                }
+
+                if (CustomEntityModels.isActive())
                 {
-                    this.func_177093_a(p_76986_1_, f6, f5, p_76986_9_, f8, f2, f7, 0.0625F);
+                    this.renderEntity = null;
                 }
+
+                GlStateManager.func_179101_C();
             }
+            catch (Exception exception)
+            {
+                field_147923_a.error((String)"Couldn\'t render entity", (Throwable)exception);
+            }
 
-            GlStateManager.func_179101_C();
-        }
-        catch (Exception exception)
-        {
-            field_147923_a.error((String)"Couldn\'t render entity", (Throwable)exception);
-        }
+            GlStateManager.func_179138_g(OpenGlHelper.field_77476_b);
+            GlStateManager.func_179098_w();
+            GlStateManager.func_179138_g(OpenGlHelper.field_77478_a);
+            GlStateManager.func_179089_o();
+            GlStateManager.func_179121_F();
 
-        GlStateManager.func_179138_g(OpenGlHelper.field_77476_b);
-        GlStateManager.func_179098_w();
-        GlStateManager.func_179138_g(OpenGlHelper.field_77478_a);
-        GlStateManager.func_179089_o();
-        GlStateManager.func_179121_F();
+            if (!this.field_177098_i)
+            {
+                super.func_76986_a(p_76986_1_, p_76986_2_, p_76986_4_, p_76986_6_, p_76986_8_, p_76986_9_);
+            }
 
-        if (!this.field_177098_i)
-        {
-            super.func_76986_a(p_76986_1_, p_76986_2_, p_76986_4_, p_76986_6_, p_76986_8_, p_76986_9_);
+            if (Reflector.RenderLivingEvent_Post_Constructor.exists())
+            {
+                Reflector.postForgeBusEvent(Reflector.RenderLivingEvent_Post_Constructor, new Object[] {p_76986_1_, this, Double.valueOf(p_76986_2_), Double.valueOf(p_76986_4_), Double.valueOf(p_76986_6_)});
+            }
         }
     }
 
@@ -235,6 +342,9 @@
         GlStateManager.func_179138_g(OpenGlHelper.field_77478_a);
     }
 
+    /**
+     * Renders the model in RenderLiving
+     */
     protected void func_77036_a(T p_77036_1_, float p_77036_2_, float p_77036_3_, float p_77036_4_, float p_77036_5_, float p_77036_6_, float p_77036_7_)
     {
         boolean flag = !p_77036_1_.func_82150_aj();
@@ -323,6 +433,11 @@
                 this.field_177095_g.put(0.0F);
                 this.field_177095_g.put(0.0F);
                 this.field_177095_g.put(0.3F);
+
+                if (Config.isShaders())
+                {
+                    Shaders.setEntityColor(1.0F, 0.0F, 0.0F, 0.3F);
+                }
             }
             else
             {
@@ -334,6 +449,11 @@
                 this.field_177095_g.put(f3);
                 this.field_177095_g.put(f4);
                 this.field_177095_g.put(1.0F - f1);
+
+                if (Config.isShaders())
+                {
+                    Shaders.setEntityColor(f2, f3, f4, 1.0F - f1);
+                }
             }
 
             this.field_177095_g.flip();
@@ -394,8 +514,16 @@
         GL11.glTexEnvi(GL11.GL_TEXTURE_ENV, OpenGlHelper.field_176085_I, GL11.GL_SRC_ALPHA);
         GL11.glTexEnvi(GL11.GL_TEXTURE_ENV, OpenGlHelper.field_176078_F, GL11.GL_TEXTURE);
         GlStateManager.func_179138_g(OpenGlHelper.field_77478_a);
+
+        if (Config.isShaders())
+        {
+            Shaders.setEntityColor(0.0F, 0.0F, 0.0F, 0.0F);
+        }
     }
 
+    /**
+     * Sets a simple glTranslate on a LivingEntity.
+     */
     protected void func_77039_a(T p_77039_1_, double p_77039_2_, double p_77039_4_, double p_77039_6_)
     {
         GlStateManager.func_179109_b((float)p_77039_2_, (float)p_77039_4_, (float)p_77039_6_);
@@ -429,11 +557,17 @@
         }
     }
 
+    /**
+     * Returns where in the swing animation the living entity is (from 0 to 1).  Args : entity, partialTickTime
+     */
     protected float func_77040_d(T p_77040_1_, float p_77040_2_)
     {
         return p_77040_1_.func_70678_g(p_77040_2_);
     }
 
+    /**
+     * Defines what float the third param in setRotationAngles of ModelBase is
+     */
     protected float func_77044_a(T p_77044_1_, float p_77044_2_)
     {
         return (float)p_77044_1_.field_70173_aa + p_77044_2_;
@@ -444,8 +578,39 @@
         for (LayerRenderer<T> layerrenderer : this.field_177097_h)
         {
             boolean flag = this.func_177092_a(p_177093_1_, p_177093_4_, layerrenderer.func_177142_b());
+
+            if (EmissiveTextures.isActive())
+            {
+                EmissiveTextures.beginRender();
+            }
+
+            if (this.renderLayersPushMatrix)
+            {
+                GlStateManager.func_179094_E();
+            }
+
             layerrenderer.func_177141_a(p_177093_1_, p_177093_2_, p_177093_3_, p_177093_4_, p_177093_5_, p_177093_6_, p_177093_7_, p_177093_8_);
 
+            if (this.renderLayersPushMatrix)
+            {
+                GlStateManager.func_179121_F();
+            }
+
+            if (EmissiveTextures.isActive())
+            {
+                if (EmissiveTextures.hasEmissive())
+                {
+                    this.renderLayersPushMatrix = true;
+                    EmissiveTextures.beginRenderEmissive();
+                    GlStateManager.func_179094_E();
+                    layerrenderer.func_177141_a(p_177093_1_, p_177093_2_, p_177093_3_, p_177093_4_, p_177093_5_, p_177093_6_, p_177093_7_, p_177093_8_);
+                    GlStateManager.func_179121_F();
+                    EmissiveTextures.endRenderEmissive();
+                }
+
+                EmissiveTextures.endRender();
+            }
+
             if (flag)
             {
                 this.func_177091_f();
@@ -458,65 +623,80 @@
         return 90.0F;
     }
 
+    /**
+     * Returns an ARGB int color back. Args: entityLiving, lightBrightness, partialTickTime
+     */
     protected int func_77030_a(T p_77030_1_, float p_77030_2_, float p_77030_3_)
     {
         return 0;
     }
 
+    /**
+     * Allows the render to do any OpenGL state modifications necessary before the model is rendered. Args:
+     * entityLiving, partialTickTime
+     */
     protected void func_77041_b(T p_77041_1_, float p_77041_2_)
     {
     }
 
     public void func_177067_a(T p_177067_1_, double p_177067_2_, double p_177067_4_, double p_177067_6_)
     {
-        if (this.func_177070_b(p_177067_1_))
+        if (!Reflector.RenderLivingEvent_Specials_Pre_Constructor.exists() || !Reflector.postForgeBusEvent(Reflector.RenderLivingEvent_Specials_Pre_Constructor, new Object[] {p_177067_1_, this, Double.valueOf(p_177067_2_), Double.valueOf(p_177067_4_), Double.valueOf(p_177067_6_)}))
         {
-            double d0 = p_177067_1_.func_70068_e(this.field_76990_c.field_78734_h);
-            float f = p_177067_1_.func_70093_af() ? 32.0F : 64.0F;
-
-            if (d0 < (double)(f * f))
+        	if (this.func_177070_b(p_177067_1_) || (Wrapper.getInstance().isF5Nametags() && p_177067_1_ instanceof EntityPlayer && p_177067_1_ == Minecraft.func_71410_x().field_71439_g))
             {
-                String s = p_177067_1_.func_145748_c_().func_150254_d();
-                float f1 = 0.02666667F;
-                GlStateManager.func_179092_a(516, 0.1F);
+                double d0 = p_177067_1_.func_70068_e(this.field_76990_c.field_78734_h);
+                float f = p_177067_1_.func_70093_af() ? NAME_TAG_RANGE_SNEAK : NAME_TAG_RANGE;
 
-                if (p_177067_1_.func_70093_af())
+                if (d0 < (double)(f * f))
                 {
-                    FontRenderer fontrenderer = this.func_76983_a();
-                    GlStateManager.func_179094_E();
-                    GlStateManager.func_179109_b((float)p_177067_2_, (float)p_177067_4_ + p_177067_1_.field_70131_O + 0.5F - (p_177067_1_.func_70631_g_() ? p_177067_1_.field_70131_O / 2.0F : 0.0F), (float)p_177067_6_);
-                    GL11.glNormal3f(0.0F, 1.0F, 0.0F);
-                    GlStateManager.func_179114_b(-this.field_76990_c.field_78735_i, 0.0F, 1.0F, 0.0F);
-                    GlStateManager.func_179114_b(this.field_76990_c.field_78732_j, 1.0F, 0.0F, 0.0F);
-                    GlStateManager.func_179152_a(-0.02666667F, -0.02666667F, 0.02666667F);
-                    GlStateManager.func_179109_b(0.0F, 9.374999F, 0.0F);
-                    GlStateManager.func_179140_f();
-                    GlStateManager.func_179132_a(false);
-                    GlStateManager.func_179147_l();
-                    GlStateManager.func_179090_x();
-                    GlStateManager.func_179120_a(770, 771, 1, 0);
-                    int i = fontrenderer.func_78256_a(s) / 2;
-                    Tessellator tessellator = Tessellator.func_178181_a();
-                    WorldRenderer worldrenderer = tessellator.func_178180_c();
-                    worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181706_f);
-                    worldrenderer.func_181662_b((double)(-i - 1), -1.0D, 0.0D).func_181666_a(0.0F, 0.0F, 0.0F, 0.25F).func_181675_d();
-                    worldrenderer.func_181662_b((double)(-i - 1), 8.0D, 0.0D).func_181666_a(0.0F, 0.0F, 0.0F, 0.25F).func_181675_d();
-                    worldrenderer.func_181662_b((double)(i + 1), 8.0D, 0.0D).func_181666_a(0.0F, 0.0F, 0.0F, 0.25F).func_181675_d();
-                    worldrenderer.func_181662_b((double)(i + 1), -1.0D, 0.0D).func_181666_a(0.0F, 0.0F, 0.0F, 0.25F).func_181675_d();
-                    tessellator.func_78381_a();
-                    GlStateManager.func_179098_w();
-                    GlStateManager.func_179132_a(true);
-                    fontrenderer.func_78276_b(s, -fontrenderer.func_78256_a(s) / 2, 0, 553648127);
-                    GlStateManager.func_179145_e();
-                    GlStateManager.func_179084_k();
-                    GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
-                    GlStateManager.func_179121_F();
+                    String s = p_177067_1_.func_145748_c_().func_150254_d();
+                    float f1 = 0.02666667F;
+                    GlStateManager.func_179092_a(516, 0.1F);
+
+                    if (p_177067_1_.func_70093_af())
+                    {
+                        FontRenderer fontrenderer = this.func_76983_a();
+                        GlStateManager.func_179094_E();
+                        GlStateManager.func_179109_b((float)p_177067_2_, (float)p_177067_4_ + p_177067_1_.field_70131_O + 0.5F - (p_177067_1_.func_70631_g_() ? p_177067_1_.field_70131_O / 2.0F : 0.0F), (float)p_177067_6_);
+                        GL11.glNormal3f(0.0F, 1.0F, 0.0F);
+                        GlStateManager.func_179114_b(-this.field_76990_c.field_78735_i, 0.0F, 1.0F, 0.0F);
+                        GlStateManager.func_179114_b(this.field_76990_c.field_78732_j, 1.0F, 0.0F, 0.0F);
+                        GlStateManager.func_179152_a(-0.02666667F, -0.02666667F, 0.02666667F);
+                        GlStateManager.func_179109_b(0.0F, 9.374999F, 0.0F);
+                        GlStateManager.func_179140_f();
+                        GlStateManager.func_179132_a(false);
+                        GlStateManager.func_179147_l();
+                        GlStateManager.func_179090_x();
+                        GlStateManager.func_179120_a(770, 771, 1, 0);
+                        int i = fontrenderer.func_78256_a(s) / 2;
+                        Tessellator tessellator = Tessellator.func_178181_a();
+                        WorldRenderer worldrenderer = tessellator.func_178180_c();
+                        worldrenderer.func_181668_a(7, DefaultVertexFormats.field_181706_f);
+                        worldrenderer.func_181662_b((double)(-i - 1), -1.0D, 0.0D).func_181666_a(0.0F, 0.0F, 0.0F, 0.25F).func_181675_d();
+                        worldrenderer.func_181662_b((double)(-i - 1), 8.0D, 0.0D).func_181666_a(0.0F, 0.0F, 0.0F, 0.25F).func_181675_d();
+                        worldrenderer.func_181662_b((double)(i + 1), 8.0D, 0.0D).func_181666_a(0.0F, 0.0F, 0.0F, 0.25F).func_181675_d();
+                        worldrenderer.func_181662_b((double)(i + 1), -1.0D, 0.0D).func_181666_a(0.0F, 0.0F, 0.0F, 0.25F).func_181675_d();
+                        tessellator.func_78381_a();
+                        GlStateManager.func_179098_w();
+                        GlStateManager.func_179132_a(true);
+                        fontrenderer.func_78276_b(s, -fontrenderer.func_78256_a(s) / 2, 0, 553648127);
+                        GlStateManager.func_179145_e();
+                        GlStateManager.func_179084_k();
+                        GlStateManager.func_179131_c(1.0F, 1.0F, 1.0F, 1.0F);
+                        GlStateManager.func_179121_F();
+                    }
+                    else
+                    {
+                        this.func_177069_a(p_177067_1_, p_177067_2_, p_177067_4_ - (p_177067_1_.func_70631_g_() ? (double)(p_177067_1_.field_70131_O / 2.0F) : 0.0D), p_177067_6_, s, 0.02666667F, d0);
+                    }
                 }
-                else
-                {
-                    this.func_177069_a(p_177067_1_, p_177067_2_, p_177067_4_ - (p_177067_1_.func_70631_g_() ? (double)(p_177067_1_.field_70131_O / 2.0F) : 0.0D), p_177067_6_, s, 0.02666667F, d0);
-                }
             }
+
+            if (Reflector.RenderLivingEvent_Specials_Post_Constructor.exists())
+            {
+                Reflector.postForgeBusEvent(Reflector.RenderLivingEvent_Specials_Post_Constructor, new Object[] {p_177067_1_, this, Double.valueOf(p_177067_2_), Double.valueOf(p_177067_4_), Double.valueOf(p_177067_6_)});
+            }
         }
     }
 
@@ -537,12 +717,16 @@
                 {
                     case ALWAYS:
                         return true;
+
                     case NEVER:
                         return false;
+
                     case HIDE_FOR_OTHER_TEAMS:
                         return team1 == null || team.func_142054_a(team1);
+
                     case HIDE_FOR_OWN_TEAM:
                         return team1 == null || !team.func_142054_a(team1);
+
                     default:
                         return true;
                 }
@@ -557,6 +741,11 @@
         this.field_177098_i = p_177086_1_;
     }
 
+    public List<LayerRenderer<T>> getLayerRenderers()
+    {
+        return this.field_177097_h;
+    }
+
     static
     {
         int[] aint = field_177096_e.func_110565_c();
