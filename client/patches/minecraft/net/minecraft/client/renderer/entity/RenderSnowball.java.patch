--- ../src-base/minecraft/net/minecraft/client/renderer/entity/RenderSnowball.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/entity/RenderSnowball.java
@@ -7,10 +7,7 @@
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.util.ResourceLocation;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-@SideOnly(Side.CLIENT)
 public class RenderSnowball<T extends Entity> extends Render<T>
 {
     protected final Item field_177084_a;
@@ -23,6 +20,14 @@
         this.field_177083_e = p_i46137_3_;
     }
 
+    /**
+     * Actually renders the given argument. This is a synthetic bridge method, always casting down its argument and then
+     * handing it off to a worker function which does the actual work. In all probabilty, the class Render is generic
+     * (Render<T extends Entity>) and this method has signature public void doRender(T entity, double d, double d1,
+     * double d2, float f, float f1). But JAD is pre 1.5 so doe
+     *  
+     * @param entityYaw The yaw rotation of the passed entity
+     */
     public void func_76986_a(T p_76986_1_, double p_76986_2_, double p_76986_4_, double p_76986_6_, float p_76986_8_, float p_76986_9_)
     {
         GlStateManager.func_179094_E();
@@ -43,6 +48,9 @@
         return new ItemStack(this.field_177084_a, 1, 0);
     }
 
+    /**
+     * Returns the location of an entity's texture. Doesn't seem to be called unless you call Render.bindEntityTexture.
+     */
     protected ResourceLocation func_110775_a(Entity p_110775_1_)
     {
         return TextureMap.field_110575_b;
