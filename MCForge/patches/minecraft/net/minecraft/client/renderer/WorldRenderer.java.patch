--- ../src-base/minecraft/net/minecraft/client/renderer/WorldRenderer.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/WorldRenderer.java
@@ -9,30 +9,50 @@
 import java.util.Arrays;
 import java.util.BitSet;
 import java.util.Comparator;
+import net.minecraft.block.state.IBlockState;
+import net.minecraft.client.renderer.texture.TextureAtlasSprite;
 import net.minecraft.client.renderer.vertex.VertexFormat;
 import net.minecraft.client.renderer.vertex.VertexFormatElement;
+import net.minecraft.src.Config;
+import net.minecraft.util.BlockPos;
+import net.minecraft.util.EnumWorldBlockLayer;
 import net.minecraft.util.MathHelper;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
+import net.optifine.SmartAnimations;
+import net.optifine.render.RenderEnv;
+import net.optifine.shaders.SVertexBuilder;
+import net.optifine.util.TextureUtils;
 import org.apache.logging.log4j.LogManager;
+import org.lwjgl.opengl.GL11;
 
-@SideOnly(Side.CLIENT)
 public class WorldRenderer
 {
     private ByteBuffer field_179001_a;
-    private IntBuffer field_178999_b;
+    public IntBuffer field_178999_b;
     private ShortBuffer field_181676_c;
-    private FloatBuffer field_179000_c;
-    private int field_178997_d;
+    public FloatBuffer field_179000_c;
+    public int field_178997_d;
     private VertexFormatElement field_181677_f;
     private int field_181678_g;
-    private boolean field_78939_q;
-    private int field_179006_k;
+
+    /** Boolean for whether this renderer needs to be updated or not */
+    private boolean needsUpdate;
+    public int field_179006_k;
     private double field_179004_l;
     private double field_179005_m;
     private double field_179002_n;
     private VertexFormat field_179011_q;
-    private boolean field_179010_r;
+    public boolean field_179010_r;
+    private EnumWorldBlockLayer blockLayer = null;
+    private boolean[] drawnIcons = new boolean[256];
+    private TextureAtlasSprite[] quadSprites = null;
+    private TextureAtlasSprite[] quadSpritesPrev = null;
+    private TextureAtlasSprite quadSprite = null;
+    public SVertexBuilder sVertexBuilder;
+    public RenderEnv renderEnv = null;
+    public BitSet animatedSprites = null;
+    public BitSet animatedSpritesCached = new BitSet();
+    private boolean modeTriangles = false;
+    private ByteBuffer byteBufferTriangles;
 
     public WorldRenderer(int p_i46275_1_)
     {
@@ -40,6 +60,7 @@
         this.field_178999_b = this.field_179001_a.asIntBuffer();
         this.field_181676_c = this.field_179001_a.asShortBuffer();
         this.field_179000_c = this.field_179001_a.asFloatBuffer();
+        SVertexBuilder.initVertexBuilder(this);
     }
 
     private void func_181670_b(int p_181670_1_)
@@ -56,11 +77,20 @@
             bytebuffer.put(this.field_179001_a);
             bytebuffer.rewind();
             this.field_179001_a = bytebuffer;
-            this.field_179000_c = this.field_179001_a.asFloatBuffer().asReadOnlyBuffer();
+            this.field_179000_c = this.field_179001_a.asFloatBuffer();
             this.field_178999_b = this.field_179001_a.asIntBuffer();
             this.field_178999_b.position(l);
             this.field_181676_c = this.field_179001_a.asShortBuffer();
             this.field_181676_c.position(l << 1);
+
+            if (this.quadSprites != null)
+            {
+                TextureAtlasSprite[] atextureatlassprite = this.quadSprites;
+                int i1 = this.getBufferQuadSize();
+                this.quadSprites = new TextureAtlasSprite[i1];
+                System.arraycopy(atextureatlassprite, 0, this.quadSprites, 0, Math.min(atextureatlassprite.length, this.quadSprites.length));
+                this.quadSpritesPrev = null;
+            }
         }
     }
 
@@ -71,7 +101,7 @@
 
         for (int j = 0; j < i; ++j)
         {
-            afloat[j] = func_181665_a(this.field_179000_c, (float)((double)p_181674_1_ + this.field_179004_l), (float)((double)p_181674_2_ + this.field_179005_m), (float)((double)p_181674_3_ + this.field_179002_n), this.field_179011_q.func_181719_f(), j * this.field_179011_q.func_177338_f());
+            afloat[j] = getDistanceSq(this.field_179000_c, (float)((double)p_181674_1_ + this.field_179004_l), (float)((double)p_181674_2_ + this.field_179005_m), (float)((double)p_181674_3_ + this.field_179002_n), this.field_179011_q.func_181719_f(), j * this.field_179011_q.func_177338_f());
         }
 
         Integer[] ainteger = new Integer[i];
@@ -122,6 +152,23 @@
 
             bitset.set(l1);
         }
+
+        this.field_178999_b.limit(this.field_178999_b.capacity());
+        this.field_178999_b.position(this.func_181664_j());
+
+        if (this.quadSprites != null)
+        {
+            TextureAtlasSprite[] atextureatlassprite = new TextureAtlasSprite[this.field_178997_d / 4];
+            int i2 = this.field_179011_q.func_177338_f() / 4 * 4;
+
+            for (int j2 = 0; j2 < ainteger.length; ++j2)
+            {
+                int k2 = ainteger[j2].intValue();
+                atextureatlassprite[j2] = this.quadSprites[k2];
+            }
+
+            System.arraycopy(atextureatlassprite, 0, this.quadSprites, 0, atextureatlassprite.length);
+        }
     }
 
     public WorldRenderer.State func_181672_a()
@@ -133,15 +180,24 @@
         this.field_178999_b.get(aint);
         this.field_178999_b.limit(this.field_178999_b.capacity());
         this.field_178999_b.position(i);
-        return new WorldRenderer.State(aint, new VertexFormat(this.field_179011_q));
+        TextureAtlasSprite[] atextureatlassprite = null;
+
+        if (this.quadSprites != null)
+        {
+            int j = this.field_178997_d / 4;
+            atextureatlassprite = new TextureAtlasSprite[j];
+            System.arraycopy(this.quadSprites, 0, atextureatlassprite, 0, j);
+        }
+
+        return new WorldRenderer.State(aint, new VertexFormat(this.field_179011_q), atextureatlassprite);
     }
 
-    private int func_181664_j()
+    public int func_181664_j()
     {
         return this.field_178997_d * this.field_179011_q.func_181719_f();
     }
 
-    private static float func_181665_a(FloatBuffer p_181665_0_, float p_181665_1_, float p_181665_2_, float p_181665_3_, int p_181665_4_, int p_181665_5_)
+    private static float getDistanceSq(FloatBuffer p_181665_0_, float p_181665_1_, float p_181665_2_, float p_181665_3_, int p_181665_4_, int p_181665_5_)
     {
         float f = p_181665_0_.get(p_181665_5_ + p_181665_4_ * 0 + 0);
         float f1 = p_181665_0_.get(p_181665_5_ + p_181665_4_ * 0 + 1);
@@ -168,6 +224,31 @@
         this.field_178999_b.put(p_178993_1_.func_179013_a());
         this.field_178997_d = p_178993_1_.func_179014_c();
         this.field_179011_q = new VertexFormat(p_178993_1_.func_179016_d());
+
+        if (p_178993_1_.stateQuadSprites != null)
+        {
+            if (this.quadSprites == null)
+            {
+                this.quadSprites = this.quadSpritesPrev;
+            }
+
+            if (this.quadSprites == null || this.quadSprites.length < this.getBufferQuadSize())
+            {
+                this.quadSprites = new TextureAtlasSprite[this.getBufferQuadSize()];
+            }
+
+            TextureAtlasSprite[] atextureatlassprite = p_178993_1_.stateQuadSprites;
+            System.arraycopy(atextureatlassprite, 0, this.quadSprites, 0, atextureatlassprite.length);
+        }
+        else
+        {
+            if (this.quadSprites != null)
+            {
+                this.quadSpritesPrev = this.quadSprites;
+            }
+
+            this.quadSprites = null;
+        }
     }
 
     public void func_178965_a()
@@ -175,6 +256,23 @@
         this.field_178997_d = 0;
         this.field_181677_f = null;
         this.field_181678_g = 0;
+        this.quadSprite = null;
+
+        if (SmartAnimations.isActive())
+        {
+            if (this.animatedSprites == null)
+            {
+                this.animatedSprites = this.animatedSpritesCached;
+            }
+
+            this.animatedSprites.clear();
+        }
+        else if (this.animatedSprites != null)
+        {
+            this.animatedSprites = null;
+        }
+
+        this.modeTriangles = false;
     }
 
     public void func_181668_a(int p_181668_1_, VertexFormat p_181668_2_)
@@ -190,13 +288,50 @@
             this.field_179006_k = p_181668_1_;
             this.field_179011_q = p_181668_2_;
             this.field_181677_f = p_181668_2_.func_177348_c(this.field_181678_g);
-            this.field_78939_q = false;
+            this.needsUpdate = false;
             this.field_179001_a.limit(this.field_179001_a.capacity());
+
+            if (Config.isShaders())
+            {
+                SVertexBuilder.endSetVertexFormat(this);
+            }
+
+            if (Config.isMultiTexture())
+            {
+                if (this.blockLayer != null)
+                {
+                    if (this.quadSprites == null)
+                    {
+                        this.quadSprites = this.quadSpritesPrev;
+                    }
+
+                    if (this.quadSprites == null || this.quadSprites.length < this.getBufferQuadSize())
+                    {
+                        this.quadSprites = new TextureAtlasSprite[this.getBufferQuadSize()];
+                    }
+                }
+            }
+            else
+            {
+                if (this.quadSprites != null)
+                {
+                    this.quadSpritesPrev = this.quadSprites;
+                }
+
+                this.quadSprites = null;
+            }
         }
     }
 
     public WorldRenderer func_181673_a(double p_181673_1_, double p_181673_3_)
     {
+        if (this.quadSprite != null && this.quadSprites != null)
+        {
+            p_181673_1_ = (double)this.quadSprite.toSingleU((float)p_181673_1_);
+            p_181673_3_ = (double)this.quadSprite.toSingleV((float)p_181673_3_);
+            this.quadSprites[this.field_178997_d / 4] = this.quadSprite;
+        }
+
         int i = this.field_178997_d * this.field_179011_q.func_177338_f() + this.field_179011_q.func_181720_d(this.field_181678_g);
 
         switch (this.field_181677_f.func_177367_b())
@@ -205,16 +340,19 @@
                 this.field_179001_a.putFloat(i, (float)p_181673_1_);
                 this.field_179001_a.putFloat(i + 4, (float)p_181673_3_);
                 break;
+
             case UINT:
             case INT:
                 this.field_179001_a.putInt(i, (int)p_181673_1_);
                 this.field_179001_a.putInt(i + 4, (int)p_181673_3_);
                 break;
+
             case USHORT:
             case SHORT:
                 this.field_179001_a.putShort(i, (short)((int)p_181673_3_));
                 this.field_179001_a.putShort(i + 2, (short)((int)p_181673_1_));
                 break;
+
             case UBYTE:
             case BYTE:
                 this.field_179001_a.put(i, (byte)((int)p_181673_3_));
@@ -235,16 +373,19 @@
                 this.field_179001_a.putFloat(i, (float)p_181671_1_);
                 this.field_179001_a.putFloat(i + 4, (float)p_181671_2_);
                 break;
+
             case UINT:
             case INT:
                 this.field_179001_a.putInt(i, p_181671_1_);
                 this.field_179001_a.putInt(i + 4, p_181671_2_);
                 break;
+
             case USHORT:
             case SHORT:
                 this.field_179001_a.putShort(i, (short)p_181671_2_);
                 this.field_179001_a.putShort(i + 2, (short)p_181671_1_);
                 break;
+
             case UBYTE:
             case BYTE:
                 this.field_179001_a.put(i, (byte)p_181671_2_);
@@ -281,6 +422,9 @@
         }
     }
 
+    /**
+     * Takes in the pass the call list is being requested for. Args: renderPass
+     */
     public int func_78909_a(int p_78909_1_)
     {
         return ((this.field_178997_d - p_78909_1_) * this.field_179011_q.func_177338_f() + this.field_179011_q.func_177340_e()) / 4;
@@ -291,7 +435,7 @@
         int i = this.func_78909_a(p_178978_4_);
         int j = -1;
 
-        if (!this.field_78939_q)
+        if (!this.needsUpdate)
         {
             j = this.field_178999_b.get(i);
 
@@ -347,9 +491,12 @@
         }
     }
 
-    public void func_78914_f()
+    /**
+     * Marks the current renderer data as dirty and needing to be updated.
+     */
+    public void markDirty()
     {
-        this.field_78939_q = true;
+        this.needsUpdate = true;
     }
 
     public WorldRenderer func_181666_a(float p_181666_1_, float p_181666_2_, float p_181666_3_, float p_181666_4_)
@@ -359,7 +506,7 @@
 
     public WorldRenderer func_181669_b(int p_181669_1_, int p_181669_2_, int p_181669_3_, int p_181669_4_)
     {
-        if (this.field_78939_q)
+        if (this.needsUpdate)
         {
             return this;
         }
@@ -375,6 +522,7 @@
                     this.field_179001_a.putFloat(i + 8, (float)p_181669_3_ / 255.0F);
                     this.field_179001_a.putFloat(i + 12, (float)p_181669_4_ / 255.0F);
                     break;
+
                 case UINT:
                 case INT:
                     this.field_179001_a.putFloat(i, (float)p_181669_1_);
@@ -382,6 +530,7 @@
                     this.field_179001_a.putFloat(i + 8, (float)p_181669_3_);
                     this.field_179001_a.putFloat(i + 12, (float)p_181669_4_);
                     break;
+
                 case USHORT:
                 case SHORT:
                     this.field_179001_a.putShort(i, (short)p_181669_1_);
@@ -389,9 +538,9 @@
                     this.field_179001_a.putShort(i + 4, (short)p_181669_3_);
                     this.field_179001_a.putShort(i + 6, (short)p_181669_4_);
                     break;
+
                 case UBYTE:
                 case BYTE:
-
                     if (ByteOrder.nativeOrder() == ByteOrder.LITTLE_ENDIAN)
                     {
                         this.field_179001_a.put(i, (byte)p_181669_1_);
@@ -415,20 +564,42 @@
 
     public void func_178981_a(int[] p_178981_1_)
     {
+        if (Config.isShaders())
+        {
+            SVertexBuilder.beginAddVertexData(this, p_178981_1_);
+        }
+
         this.func_181670_b(p_178981_1_.length);
         this.field_178999_b.position(this.func_181664_j());
         this.field_178999_b.put(p_178981_1_);
         this.field_178997_d += p_178981_1_.length / this.field_179011_q.func_181719_f();
+
+        if (Config.isShaders())
+        {
+            SVertexBuilder.endAddVertexData(this);
+        }
     }
 
     public void func_181675_d()
     {
         ++this.field_178997_d;
         this.func_181670_b(this.field_179011_q.func_181719_f());
+        this.field_181678_g = 0;
+        this.field_181677_f = this.field_179011_q.func_177348_c(this.field_181678_g);
+
+        if (Config.isShaders())
+        {
+            SVertexBuilder.endAddVertex(this);
+        }
     }
 
     public WorldRenderer func_181662_b(double p_181662_1_, double p_181662_3_, double p_181662_5_)
     {
+        if (Config.isShaders())
+        {
+            SVertexBuilder.beginAddVertex(this);
+        }
+
         int i = this.field_178997_d * this.field_179011_q.func_177338_f() + this.field_179011_q.func_181720_d(this.field_181678_g);
 
         switch (this.field_181677_f.func_177367_b())
@@ -438,18 +609,21 @@
                 this.field_179001_a.putFloat(i + 4, (float)(p_181662_3_ + this.field_179005_m));
                 this.field_179001_a.putFloat(i + 8, (float)(p_181662_5_ + this.field_179002_n));
                 break;
+
             case UINT:
             case INT:
                 this.field_179001_a.putInt(i, Float.floatToRawIntBits((float)(p_181662_1_ + this.field_179004_l)));
                 this.field_179001_a.putInt(i + 4, Float.floatToRawIntBits((float)(p_181662_3_ + this.field_179005_m)));
                 this.field_179001_a.putInt(i + 8, Float.floatToRawIntBits((float)(p_181662_5_ + this.field_179002_n)));
                 break;
+
             case USHORT:
             case SHORT:
                 this.field_179001_a.putShort(i, (short)((int)(p_181662_1_ + this.field_179004_l)));
                 this.field_179001_a.putShort(i + 2, (short)((int)(p_181662_3_ + this.field_179005_m)));
                 this.field_179001_a.putShort(i + 4, (short)((int)(p_181662_5_ + this.field_179002_n)));
                 break;
+
             case UBYTE:
             case BYTE:
                 this.field_179001_a.put(i, (byte)((int)(p_181662_1_ + this.field_179004_l)));
@@ -498,23 +672,26 @@
                 this.field_179001_a.putFloat(i + 4, p_181663_2_);
                 this.field_179001_a.putFloat(i + 8, p_181663_3_);
                 break;
+
             case UINT:
             case INT:
                 this.field_179001_a.putInt(i, (int)p_181663_1_);
                 this.field_179001_a.putInt(i + 4, (int)p_181663_2_);
                 this.field_179001_a.putInt(i + 8, (int)p_181663_3_);
                 break;
+
             case USHORT:
             case SHORT:
-                this.field_179001_a.putShort(i, (short)((int)p_181663_1_ * 32767 & 65535));
-                this.field_179001_a.putShort(i + 2, (short)((int)p_181663_2_ * 32767 & 65535));
-                this.field_179001_a.putShort(i + 4, (short)((int)p_181663_3_ * 32767 & 65535));
+                this.field_179001_a.putShort(i, (short)((int)(p_181663_1_ * 32767.0F) & 65535));
+                this.field_179001_a.putShort(i + 2, (short)((int)(p_181663_2_ * 32767.0F) & 65535));
+                this.field_179001_a.putShort(i + 4, (short)((int)(p_181663_3_ * 32767.0F) & 65535));
                 break;
+
             case UBYTE:
             case BYTE:
-                this.field_179001_a.put(i, (byte)((int)p_181663_1_ * 127 & 255));
-                this.field_179001_a.put(i + 1, (byte)((int)p_181663_2_ * 127 & 255));
-                this.field_179001_a.put(i + 2, (byte)((int)p_181663_3_ * 127 & 255));
+                this.field_179001_a.put(i, (byte)((int)(p_181663_1_ * 127.0F) & 255));
+                this.field_179001_a.put(i + 1, (byte)((int)(p_181663_2_ * 127.0F) & 255));
+                this.field_179001_a.put(i + 2, (byte)((int)(p_181663_3_ * 127.0F) & 255));
         }
 
         this.func_181667_k();
@@ -544,7 +721,7 @@
 
     public ByteBuffer func_178966_f()
     {
-        return this.field_179001_a;
+        return this.modeTriangles ? this.byteBufferTriangles : this.field_179001_a;
     }
 
     public VertexFormat func_178973_g()
@@ -554,12 +731,12 @@
 
     public int func_178989_h()
     {
-        return this.field_178997_d;
+        return this.modeTriangles ? this.field_178997_d / 4 * 6 : this.field_178997_d;
     }
 
     public int func_178979_i()
     {
-        return this.field_179006_k;
+        return this.modeTriangles ? 4 : this.field_179006_k;
     }
 
     public void func_178968_d(int p_178968_1_)
@@ -578,12 +755,307 @@
         }
     }
 
-    @SideOnly(Side.CLIENT)
+    public void putSprite(TextureAtlasSprite p_putSprite_1_)
+    {
+        if (this.animatedSprites != null && p_putSprite_1_ != null && p_putSprite_1_.getAnimationIndex() >= 0)
+        {
+            this.animatedSprites.set(p_putSprite_1_.getAnimationIndex());
+        }
+
+        if (this.quadSprites != null)
+        {
+            int i = this.field_178997_d / 4;
+            this.quadSprites[i - 1] = p_putSprite_1_;
+        }
+    }
+
+    public void setSprite(TextureAtlasSprite p_setSprite_1_)
+    {
+        if (this.animatedSprites != null && p_setSprite_1_ != null && p_setSprite_1_.getAnimationIndex() >= 0)
+        {
+            this.animatedSprites.set(p_setSprite_1_.getAnimationIndex());
+        }
+
+        if (this.quadSprites != null)
+        {
+            this.quadSprite = p_setSprite_1_;
+        }
+    }
+
+    public boolean isMultiTexture()
+    {
+        return this.quadSprites != null;
+    }
+
+    public void drawMultiTexture()
+    {
+        if (this.quadSprites != null)
+        {
+            int i = Config.getMinecraft().func_147117_R().getCountRegisteredSprites();
+
+            if (this.drawnIcons.length <= i)
+            {
+                this.drawnIcons = new boolean[i + 1];
+            }
+
+            Arrays.fill(this.drawnIcons, false);
+            int j = 0;
+            int k = -1;
+            int l = this.field_178997_d / 4;
+
+            for (int i1 = 0; i1 < l; ++i1)
+            {
+                TextureAtlasSprite textureatlassprite = this.quadSprites[i1];
+
+                if (textureatlassprite != null)
+                {
+                    int j1 = textureatlassprite.getIndexInMap();
+
+                    if (!this.drawnIcons[j1])
+                    {
+                        if (textureatlassprite == TextureUtils.iconGrassSideOverlay)
+                        {
+                            if (k < 0)
+                            {
+                                k = i1;
+                            }
+                        }
+                        else
+                        {
+                            i1 = this.drawForIcon(textureatlassprite, i1) - 1;
+                            ++j;
+
+                            if (this.blockLayer != EnumWorldBlockLayer.TRANSLUCENT)
+                            {
+                                this.drawnIcons[j1] = true;
+                            }
+                        }
+                    }
+                }
+            }
+
+            if (k >= 0)
+            {
+                this.drawForIcon(TextureUtils.iconGrassSideOverlay, k);
+                ++j;
+            }
+
+            if (j > 0)
+            {
+                ;
+            }
+        }
+    }
+
+    private int drawForIcon(TextureAtlasSprite p_drawForIcon_1_, int p_drawForIcon_2_)
+    {
+        GL11.glBindTexture(GL11.GL_TEXTURE_2D, p_drawForIcon_1_.glSpriteTextureId);
+        int i = -1;
+        int j = -1;
+        int k = this.field_178997_d / 4;
+
+        for (int l = p_drawForIcon_2_; l < k; ++l)
+        {
+            TextureAtlasSprite textureatlassprite = this.quadSprites[l];
+
+            if (textureatlassprite == p_drawForIcon_1_)
+            {
+                if (j < 0)
+                {
+                    j = l;
+                }
+            }
+            else if (j >= 0)
+            {
+                this.draw(j, l);
+
+                if (this.blockLayer == EnumWorldBlockLayer.TRANSLUCENT)
+                {
+                    return l;
+                }
+
+                j = -1;
+
+                if (i < 0)
+                {
+                    i = l;
+                }
+            }
+        }
+
+        if (j >= 0)
+        {
+            this.draw(j, k);
+        }
+
+        if (i < 0)
+        {
+            i = k;
+        }
+
+        return i;
+    }
+
+    private void draw(int p_draw_1_, int p_draw_2_)
+    {
+        int i = p_draw_2_ - p_draw_1_;
+
+        if (i > 0)
+        {
+            int j = p_draw_1_ * 4;
+            int k = i * 4;
+            GL11.glDrawArrays(this.field_179006_k, j, k);
+        }
+    }
+
+    public void setBlockLayer(EnumWorldBlockLayer p_setBlockLayer_1_)
+    {
+        this.blockLayer = p_setBlockLayer_1_;
+
+        if (p_setBlockLayer_1_ == null)
+        {
+            if (this.quadSprites != null)
+            {
+                this.quadSpritesPrev = this.quadSprites;
+            }
+
+            this.quadSprites = null;
+            this.quadSprite = null;
+        }
+    }
+
+    private int getBufferQuadSize()
+    {
+        int i = this.field_178999_b.capacity() * 4 / (this.field_179011_q.func_181719_f() * 4);
+        return i;
+    }
+
+    public RenderEnv getRenderEnv(IBlockState p_getRenderEnv_1_, BlockPos p_getRenderEnv_2_)
+    {
+        if (this.renderEnv == null)
+        {
+            this.renderEnv = new RenderEnv(p_getRenderEnv_1_, p_getRenderEnv_2_);
+            return this.renderEnv;
+        }
+        else
+        {
+            this.renderEnv.reset(p_getRenderEnv_1_, p_getRenderEnv_2_);
+            return this.renderEnv;
+        }
+    }
+
+    public boolean isDrawing()
+    {
+        return this.field_179010_r;
+    }
+
+    public double getXOffset()
+    {
+        return this.field_179004_l;
+    }
+
+    public double getYOffset()
+    {
+        return this.field_179005_m;
+    }
+
+    public double getZOffset()
+    {
+        return this.field_179002_n;
+    }
+
+    public EnumWorldBlockLayer getBlockLayer()
+    {
+        return this.blockLayer;
+    }
+
+    public void putColorMultiplierRgba(float p_putColorMultiplierRgba_1_, float p_putColorMultiplierRgba_2_, float p_putColorMultiplierRgba_3_, float p_putColorMultiplierRgba_4_, int p_putColorMultiplierRgba_5_)
+    {
+        int i = this.func_78909_a(p_putColorMultiplierRgba_5_);
+        int j = -1;
+
+        if (!this.needsUpdate)
+        {
+            j = this.field_178999_b.get(i);
+
+            if (ByteOrder.nativeOrder() == ByteOrder.LITTLE_ENDIAN)
+            {
+                int k = (int)((float)(j & 255) * p_putColorMultiplierRgba_1_);
+                int l = (int)((float)(j >> 8 & 255) * p_putColorMultiplierRgba_2_);
+                int i1 = (int)((float)(j >> 16 & 255) * p_putColorMultiplierRgba_3_);
+                int j1 = (int)((float)(j >> 24 & 255) * p_putColorMultiplierRgba_4_);
+                j = j1 << 24 | i1 << 16 | l << 8 | k;
+            }
+            else
+            {
+                int k1 = (int)((float)(j >> 24 & 255) * p_putColorMultiplierRgba_1_);
+                int l1 = (int)((float)(j >> 16 & 255) * p_putColorMultiplierRgba_2_);
+                int i2 = (int)((float)(j >> 8 & 255) * p_putColorMultiplierRgba_3_);
+                int j2 = (int)((float)(j & 255) * p_putColorMultiplierRgba_4_);
+                j = k1 << 24 | l1 << 16 | i2 << 8 | j2;
+            }
+        }
+
+        this.field_178999_b.put(i, j);
+    }
+
+    public void quadsToTriangles()
+    {
+        if (this.field_179006_k == 7)
+        {
+            if (this.byteBufferTriangles == null)
+            {
+                this.byteBufferTriangles = GLAllocation.func_74524_c(this.field_179001_a.capacity() * 2);
+            }
+
+            if (this.byteBufferTriangles.capacity() < this.field_179001_a.capacity() * 2)
+            {
+                this.byteBufferTriangles = GLAllocation.func_74524_c(this.field_179001_a.capacity() * 2);
+            }
+
+            int i = this.field_179011_q.func_177338_f();
+            int j = this.field_179001_a.limit();
+            this.field_179001_a.rewind();
+            this.byteBufferTriangles.clear();
+
+            for (int k = 0; k < this.field_178997_d; k += 4)
+            {
+                this.field_179001_a.limit((k + 3) * i);
+                this.field_179001_a.position(k * i);
+                this.byteBufferTriangles.put(this.field_179001_a);
+                this.field_179001_a.limit((k + 1) * i);
+                this.field_179001_a.position(k * i);
+                this.byteBufferTriangles.put(this.field_179001_a);
+                this.field_179001_a.limit((k + 2 + 2) * i);
+                this.field_179001_a.position((k + 2) * i);
+                this.byteBufferTriangles.put(this.field_179001_a);
+            }
+
+            this.field_179001_a.limit(j);
+            this.field_179001_a.rewind();
+            this.byteBufferTriangles.flip();
+            this.modeTriangles = true;
+        }
+    }
+
+    public boolean isColorDisabled()
+    {
+        return this.needsUpdate;
+    }
+
     public class State
     {
         private final int[] field_179019_b;
         private final VertexFormat field_179018_e;
+        private TextureAtlasSprite[] stateQuadSprites;
 
+        public State(int[] p_i1_2_, VertexFormat p_i1_3_, TextureAtlasSprite[] p_i1_4_)
+        {
+            this.field_179019_b = p_i1_2_;
+            this.field_179018_e = p_i1_3_;
+            this.stateQuadSprites = p_i1_4_;
+        }
+
         public State(int[] p_i46453_2_, VertexFormat p_i46453_3_)
         {
             this.field_179019_b = p_i46453_2_;
